{"version":3,"sources":["../../src/App.jsx"],"names":["App","newEnglandApples","allApples","map","apple","width","appleUrl","appleImg","process","env","TEST_VARIABLE","I_AM_NOT_HERE","config","FALSE_VALUE","CORRECT_BOOL_VALUE","INCORRECT_BOOL_VALUE","Number","isInteger","INTEGER_VALUE"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEe,SAASA,GAAT,GAAe;AAC5B,MAAMC,gBAAgB,GAAG,CAAC,WAAD,EAAc,cAAd,CAAzB;AACA,MAAMC,SAAS,aAAOD,gBAAP,GAAyB,MAAzB,EAAiC,kBAAjC,EAAf;AACA,sBACE;AAAA,4BACE;AAAA;AAAA,MADF,eAEE;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA,MAHF,kDAIE;AAAA;AAAA,MAJF,eAKE;AAAA,gBACGC,SAAS,CAACC,GAAV,CAAc,UAAAC,KAAK;AAAA,4BAAI;AAAA,oBAAiBA;AAAjB,WAASA,KAAT,CAAJ;AAAA,OAAnB;AADH,MALF,eAQE;AAAA;AAAA,MARF,eASE,qBAAC,qBAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAd,MATF,eAUE;AAAA;AAAA,MAVF,eAWE;AAAK,MAAA,GAAG,EAAEC,iBAAV;AAAoB,MAAA,GAAG,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT;AAAvC,MAXF,eAYE;AAAK,MAAA,GAAG,EAAEC,iBAAV;AAAoB,MAAA,GAAG,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT;AAAvC,MAZF,eAaE,8BAbF,eAcE;AAAK,MAAA,GAAG,EAAEE,kBAAV;AAAoB,MAAA,GAAG,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE;AAAT;AAAvC,MAdF,eAeE;AAAA;AAAA,MAfF,eAgBE;AAAA;AAAA,MAhBF,eAiBE;AAAA,gDAA+BG,OAAO,CAACC,GAAR,CAAYC,aAA3C;AAAA,MAjBF,eAkBE;AAAA,+EAA8DF,OAAO,CAACC,GAAR,CAAYE,aAA1E;AAAA,MAlBF,eAmBE;AAAA;AAAA,MAnBF,eAoBE;AAAA,8BAAG;AAAA;AAAA,QAAH,EACGC,gBAAOC,WAAP,KAAuB,KAAvB,GAA+BD,gBAAOE,kBAAtC,GAA2DF,gBAAOG,oBADrE;AAAA,MApBF,eAuBE;AAAA,iDAAgCC,MAAM,CAACC,SAAP,CAAiBL,gBAAOM,aAAxB,IAAyC,2BAAzC,GAAuE,kCAAvG;AAAA,MAvBF,eAwBE;AAAA;AAAA,MAxBF,eAyBE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA,MAzBF;AAAA,IADF;AA6BD","sourcesContent":["import config from 'env.config';\nimport appleUrl, { ReactComponent as Apple } from './apple.svg';\nimport appleImg from './apple.jpg';\n\nimport './style.scss';\n\nexport default function App() {\n  const newEnglandApples = ['macintosh', 'granny smith'];\n  const allApples = [...newEnglandApples, 'fuji', 'golden delicious'];\n  return (\n    <div>\n      <h1>Test page</h1>\n      <h2>SCSS parsing tests</h2>\n      <h3>The Apples</h3> (&quot;The Apples&quot; should be red)\n      <h2>ES6 parsing tests</h2>\n      <ul>\n        {allApples.map(apple => <li key={apple}>{apple}</li>)}\n      </ul>\n      <h2>JSX parsing tests</h2>\n      <Apple style={{ width: '10rem' }} />\n      <h2>Asset import tests</h2>\n      <img src={appleUrl} alt=\"apple\" style={{ width: '10rem' }} />\n      <img src={appleUrl} alt=\"apple\" style={{ width: '10rem' }} />\n      <br />\n      <img src={appleImg} alt=\"apple\" style={{ width: '10rem' }} />\n      <p>Photo by Louis Hansel @shotsoflouis on Unsplash</p>\n      <h2>process.env tests</h2>\n      <p>Test process.env variable: {process.env.TEST_VARIABLE}</p>\n      <p>Non-existent process.env variable (nothing here is good): {process.env.I_AM_NOT_HERE}</p>\n      <h2>env.config.js tests</h2>\n      <p><span>env.config.js boolean test: </span>\n        {config.FALSE_VALUE === false ? config.CORRECT_BOOL_VALUE : config.INCORRECT_BOOL_VALUE}\n      </p>\n      <p>env.config.js integer test: {Number.isInteger(config.INTEGER_VALUE) ? 'It was an integer. Great.' : 'It was not an integer! Why not? '}</p>\n      <h2>Right-to-left language handling tests</h2>\n      <p className=\"text-align-right\">I&apos;m aligned right, but left in RTL.</p>\n    </div>\n  );\n}\n"],"file":"App.js"}