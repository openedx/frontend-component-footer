{"version":3,"file":"AxiosJwtTokenService.js","names":["Cookies","jwtDecode","axios","logFrontendAuthError","processAxiosErrorAndThrow","createRetryInterceptor","AxiosJwtTokenService","loggingService","tokenCookieName","tokenRefreshEndpoint","httpClient","create","defaults","withCredentials","interceptors","response","use","cookies","refreshRequestPromises","cookieValue","get","e","error","Object","message","customAttributes","responseServerEpochSeconds","undefined","makeRefreshRequest","post","axiosResponse","data","response_epoch_seconds","userIsUnauthenticated","status","remove","decodedJwtToken","browserEpochSeconds","Date","now","browserDriftSeconds","Math","abs","decodeJwtCookie","Error","forceRefresh","isTokenExpired","refresh","token","exp"],"sources":["../../src/auth/AxiosJwtTokenService.js"],"sourcesContent":["import Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport { logFrontendAuthError, processAxiosErrorAndThrow } from './utils';\nimport createRetryInterceptor from './interceptors/createRetryInterceptor';\n\nexport default class AxiosJwtTokenService {\n  static isTokenExpired(token) {\n    return !token || token.exp < Date.now() / 1000;\n  }\n\n  constructor(loggingService, tokenCookieName, tokenRefreshEndpoint) {\n    this.loggingService = loggingService;\n    this.tokenCookieName = tokenCookieName;\n    this.tokenRefreshEndpoint = tokenRefreshEndpoint;\n\n    this.httpClient = axios.create();\n    // Set withCredentials to true. Enables cross-site Access-Control requests\n    // to be made using cookies, authorization headers or TLS client\n    // certificates. More on MDN:\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n    this.httpClient.defaults.withCredentials = true;\n    // Add retries to this axios instance\n    this.httpClient.interceptors.response.use(\n      response => response,\n      createRetryInterceptor({ httpClient: this.httpClient }),\n    );\n\n    this.cookies = new Cookies();\n    this.refreshRequestPromises = {};\n  }\n\n  getHttpClient() {\n    return this.httpClient;\n  }\n\n  decodeJwtCookie() {\n    const cookieValue = this.cookies.get(this.tokenCookieName);\n\n    if (cookieValue) {\n      try {\n        return jwtDecode(cookieValue);\n      } catch (e) {\n        const error = Object.create(e);\n        error.message = 'Error decoding JWT token';\n        error.customAttributes = { cookieValue };\n        throw error;\n      }\n    }\n\n    return null;\n  }\n\n  refresh() {\n    let responseServerEpochSeconds = 0;\n\n    if (this.refreshRequestPromises[this.tokenCookieName] === undefined) {\n      const makeRefreshRequest = async () => {\n        let axiosResponse;\n        try {\n          try {\n            axiosResponse = await this.httpClient.post(this.tokenRefreshEndpoint);\n            // eslint-disable-next-line max-len\n            if (axiosResponse.data && axiosResponse.data.response_epoch_seconds) {\n              responseServerEpochSeconds = axiosResponse.data.response_epoch_seconds;\n            }\n          } catch (error) {\n            processAxiosErrorAndThrow(error);\n          }\n        } catch (error) {\n          const userIsUnauthenticated = error.response && error.response.status === 401;\n          if (userIsUnauthenticated) {\n            // Clean up the cookie if it exists to eliminate any situation\n            // where the cookie is not expired but the jwt is expired.\n            this.cookies.remove(this.tokenCookieName);\n            const decodedJwtToken = null;\n            return decodedJwtToken;\n          }\n\n          // TODO: Network timeouts and other problems will end up in\n          // this block of code. We could add logic for retrying token\n          // refreshes if we wanted to.\n          throw error;\n        }\n\n        const browserEpochSeconds = Date.now() / 1000;\n        const browserDriftSeconds = responseServerEpochSeconds > 0\n          ? Math.abs(browserEpochSeconds - responseServerEpochSeconds)\n          : null;\n\n        const decodedJwtToken = this.decodeJwtCookie();\n\n        if (!decodedJwtToken) {\n          // This is an unexpected case. The refresh endpoint should set the\n          //   cookie that is needed.\n          // For more details, see:\n          //   docs/decisions/0005-token-null-after-successful-refresh.rst\n          const error = new Error('Access token is still null after successful refresh.');\n          error.customAttributes = { axiosResponse, browserDriftSeconds, browserEpochSeconds };\n          throw error;\n        }\n\n        return decodedJwtToken;\n      };\n\n      this.refreshRequestPromises[this.tokenCookieName] = makeRefreshRequest().finally(() => {\n        delete this.refreshRequestPromises[this.tokenCookieName];\n      });\n    }\n\n    return this.refreshRequestPromises[this.tokenCookieName];\n  }\n\n  async getJwtToken(forceRefresh = false) {\n    try {\n      const decodedJwtToken = this.decodeJwtCookie(this.tokenCookieName);\n      if (!AxiosJwtTokenService.isTokenExpired(decodedJwtToken) && !forceRefresh) {\n        return decodedJwtToken;\n      }\n    } catch (e) {\n      // Log unexpected error and continue with attempt to refresh it.\n      // TODO: Fix these.  They're still using loggingService as a singleton.\n      logFrontendAuthError(this.loggingService, e);\n    }\n\n    try {\n      return await this.refresh();\n    } catch (e) {\n      // TODO: Fix these.  They're still using loggingService as a singleton.\n      logFrontendAuthError(this.loggingService, e);\n      throw e;\n    }\n  }\n}\n"],"mappings":"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"}