{"version":3,"file":"createCsrfTokenProviderInterceptor.js","names":["createCsrfTokenProviderInterceptor","options","csrfTokenService","CSRF_TOKEN_API_PATH","shouldSkip","interceptor","axiosRequestConfig","url","getCsrfToken","csrfToken","requestError","Object","create","message","config","Promise","reject","CSRF_HEADER_NAME","headers"],"sources":["../../../src/auth/interceptors/createCsrfTokenProviderInterceptor.js"],"sourcesContent":["const createCsrfTokenProviderInterceptor = (options) => {\n  const { csrfTokenService, CSRF_TOKEN_API_PATH, shouldSkip } = options;\n\n  // Creating the interceptor inside this closure to\n  // maintain reference to the options supplied.\n  const interceptor = async (axiosRequestConfig) => {\n    if (shouldSkip(axiosRequestConfig)) {\n      return axiosRequestConfig;\n    }\n    const { url } = axiosRequestConfig;\n    let csrfToken;\n\n    // Important: the job of this interceptor is to get a csrf token and update\n    // the original request configuration. Errors thrown getting the csrf token\n    // should contain the original request config. This allows other interceptors\n    // (namely our retry request interceptor below) to access the original request\n    // and handle it appropriately\n    try {\n      csrfToken = await csrfTokenService.getCsrfToken(url, CSRF_TOKEN_API_PATH);\n    } catch (error) {\n      const requestError = Object.create(error);\n      requestError.message = `[getCsrfToken] ${requestError.message}`;\n      // Important: return the original axios request config\n      requestError.config = axiosRequestConfig;\n      return Promise.reject(requestError);\n    }\n\n    const CSRF_HEADER_NAME = 'X-CSRFToken';\n    // eslint-disable-next-line no-param-reassign\n    axiosRequestConfig.headers[CSRF_HEADER_NAME] = csrfToken;\n    return axiosRequestConfig;\n  };\n\n  return interceptor;\n};\n\nexport default createCsrfTokenProviderInterceptor;\n"],"mappings":";;;;AAAA,IAAMA,kCAAkC,GAAG,SAArCA,kCAAqC,CAACC,OAAD,EAAa;EACtD,IAAQC,gBAAR,GAA8DD,OAA9D,CAAQC,gBAAR;EAAA,IAA0BC,mBAA1B,GAA8DF,OAA9D,CAA0BE,mBAA1B;EAAA,IAA+CC,UAA/C,GAA8DH,OAA9D,CAA+CG,UAA/C,CADsD,CAGtD;EACA;;EACA,IAAMC,WAAW;IAAA,mEAAG,iBAAOC,kBAAP;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA,KACdF,UAAU,CAACE,kBAAD,CADI;gBAAA;gBAAA;cAAA;;cAAA,iCAETA,kBAFS;;YAAA;cAIVC,GAJU,GAIFD,kBAJE,CAIVC,GAJU;cAAA;cAAA;cAAA,OAaEL,gBAAgB,CAACM,YAAjB,CAA8BD,GAA9B,EAAmCJ,mBAAnC,CAbF;;YAAA;cAahBM,SAbgB;cAAA;cAAA;;YAAA;cAAA;cAAA;cAeVC,YAfU,GAeKC,MAAM,CAACC,MAAP,aAfL;cAgBhBF,YAAY,CAACG,OAAb,4BAAyCH,YAAY,CAACG,OAAtD,EAhBgB,CAiBhB;;cACAH,YAAY,CAACI,MAAb,GAAsBR,kBAAtB;cAlBgB,iCAmBTS,OAAO,CAACC,MAAR,CAAeN,YAAf,CAnBS;;YAAA;cAsBZO,gBAtBY,GAsBO,aAtBP,EAuBlB;;cACAX,kBAAkB,CAACY,OAAnB,CAA2BD,gBAA3B,IAA+CR,SAA/C;cAxBkB,iCAyBXH,kBAzBW;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAXD,WAAW;MAAA;IAAA;EAAA,GAAjB;;EA4BA,OAAOA,WAAP;AACD,CAlCD;;AAoCA,eAAeL,kCAAf"}