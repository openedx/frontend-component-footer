{"version":3,"file":"interface.js","names":["PropTypes","optionsShape","config","object","isRequired","serviceShape","logInfo","func","logError","service","configure","LoggingService","options","checkPropTypes","infoStringOrErrorObject","customAttributes","errorStringOrObject","getLoggingService","Error","resetLoggingService"],"sources":["../../src/logging/interface.js"],"sourcesContent":["/**\n * #### Import members from **@edx/frontend-platform/logging**\n *\n * Contains a shared interface for logging information. (The default implementation is in\n * NewRelicLoggingService.js.) When in development mode, all messages will instead be sent to the console.\n *\n * The `initialize` function performs much of the logging configuration for you.  If, however,\n * you're not using the `initialize` function, logging (via New Relic) can be configured via:\n *\n * ```\n * import { configure, NewRelicLoggingService, logInfo, logError } from '@edx/frontend-platform/logging';\n * import { geConfig } from '@edx/frontend-platform';\n *\n * configureLogging(NewRelicLoggingService, {\n *   config: getConfig(),\n * });\n *\n * logInfo('Just so you know...');\n * logInfo(new Error('Unimportant error'), { type: 'unimportant' });\n * logError('Uhoh!');\n * logError(new Error('Uhoh error!'));\n * ```\n *\n * As shown in this example, logging depends on the configuration document.\n *\n * @module Logging\n */\n\nimport PropTypes from 'prop-types';\n\nconst optionsShape = {\n  config: PropTypes.object.isRequired,\n};\n\nconst serviceShape = {\n  logInfo: PropTypes.func.isRequired,\n  logError: PropTypes.func.isRequired,\n};\n\nlet service = null;\n\n/**\n *\n */\nexport function configure(LoggingService, options) {\n  PropTypes.checkPropTypes(optionsShape, options, 'property', 'Logging');\n  service = new LoggingService(options);\n  PropTypes.checkPropTypes(serviceShape, service, 'property', 'LoggingService');\n  return service;\n}\n\n/**\n * Logs a message to the 'info' log level. Can accept custom attributes as a property of the error\n * object, or as an optional second parameter.\n *\n * @param {string|Error} infoStringOrErrorObject\n * @param {Object} [customAttributes={}]\n */\nexport function logInfo(infoStringOrErrorObject, customAttributes) {\n  return service.logInfo(infoStringOrErrorObject, customAttributes);\n}\n\n/**\n * Logs a message to the 'error' log level.  Can accept custom attributes as a property of the error\n * object, or as an optional second parameter.\n *\n * @param {string|Error} errorStringOrObject\n * @param {Object} [customAttributes={}]\n */\nexport function logError(errorStringOrObject, customAttributes) {\n  return service.logError(errorStringOrObject, customAttributes);\n}\n\n/**\n *\n * @throws {Error} Thrown if the logging service has not yet been configured via {@link configure}.\n * @returns {LoggingService}\n */\nexport function getLoggingService() {\n  if (!service) {\n    throw Error('You must first configure the logging service.');\n  }\n  return service;\n}\n\n/**\n * Sets the configured logging service back to null.\n *\n */\nexport function resetLoggingService() {\n  service = null;\n}\n\n/**\n * @name LoggingService\n * @interface\n * @memberof module:Logging\n * @property {function} logError\n * @property {function} logInfo\n */\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,IAAMC,YAAY,GAAG;EACnBC,MAAM,EAAEF,SAAS,CAACG,MAAV,CAAiBC;AADN,CAArB;AAIA,IAAMC,YAAY,GAAG;EACnBC,OAAO,EAAEN,SAAS,CAACO,IAAV,CAAeH,UADL;EAEnBI,QAAQ,EAAER,SAAS,CAACO,IAAV,CAAeH;AAFN,CAArB;AAKA,IAAIK,OAAO,GAAG,IAAd;AAEA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,cAAnB,EAAmCC,OAAnC,EAA4C;EACjDZ,SAAS,CAACa,cAAV,CAAyBZ,YAAzB,EAAuCW,OAAvC,EAAgD,UAAhD,EAA4D,SAA5D;EACAH,OAAO,GAAG,IAAIE,cAAJ,CAAmBC,OAAnB,CAAV;EACAZ,SAAS,CAACa,cAAV,CAAyBR,YAAzB,EAAuCI,OAAvC,EAAgD,UAAhD,EAA4D,gBAA5D;EACA,OAAOA,OAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASH,OAAT,CAAiBQ,uBAAjB,EAA0CC,gBAA1C,EAA4D;EACjE,OAAON,OAAO,CAACH,OAAR,CAAgBQ,uBAAhB,EAAyCC,gBAAzC,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASP,QAAT,CAAkBQ,mBAAlB,EAAuCD,gBAAvC,EAAyD;EAC9D,OAAON,OAAO,CAACD,QAAR,CAAiBQ,mBAAjB,EAAsCD,gBAAtC,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,iBAAT,GAA6B;EAClC,IAAI,CAACR,OAAL,EAAc;IACZ,MAAMS,KAAK,CAAC,+CAAD,CAAX;EACD;;EACD,OAAOT,OAAP;AACD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASU,mBAAT,GAA+B;EACpCV,OAAO,GAAG,IAAV;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA"}