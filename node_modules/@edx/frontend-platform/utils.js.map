{"version":3,"file":"utils.js","names":["camelCase","snakeCase","modifyObjectKeys","object","modify","undefined","Array","isArray","map","value","result","Object","entries","forEach","key","camelCaseObject","snakeCaseObject","convertKeyNames","nameMap","transformer","getQueryParameters","search","global","location","keyValueFragments","slice","indexOf","split","filter","hash","reduce","params","keyValueFragment","assign","decodeURIComponent","ensureDefinedConfig","requester","keys","console","warn"],"sources":["../src/utils.js"],"sourcesContent":["/**\n * #### Import members from **@edx/frontend-platform**\n *\n * @module Utilities\n */\nimport camelCase from 'lodash.camelcase';\nimport snakeCase from 'lodash.snakecase';\n\n/**\n * This is the underlying function used by camelCaseObject, snakeCaseObject, and convertKeyNames\n * above.\n *\n * Given an object (or array) and a modification function, will perform the function on each key it\n * encounters on the object and its tree of children.\n *\n * The modification function must take a string as an argument and returns a string.\n *\n * Example:\n *\n * ```\n * (key) => {\n *   if (key === 'edX') {\n *     return 'Open edX';\n *   }\n *   return key;\n * }\n * ```\n *\n * This function will turn any key that matches 'edX' into 'Open edX'.  All other keys will be\n * passed through unmodified.\n *\n * Can accept arrays as well as objects, and will perform its conversion on any objects it finds in\n * the array.\n *\n * @param {Object} object\n * @param {function} modify\n * @returns {Object}\n */\nexport function modifyObjectKeys(object, modify) {\n  // If the passed in object is not an Object, return it.\n  if (\n    object === undefined\n    || object === null\n    || (typeof object !== 'object' && !Array.isArray(object))\n  ) {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    return object.map(value => modifyObjectKeys(value, modify));\n  }\n\n  // Otherwise, process all its keys.\n  const result = {};\n  Object.entries(object).forEach(([key, value]) => {\n    result[modify(key)] = modifyObjectKeys(value, modify);\n  });\n  return result;\n}\n\n/**\n * Performs a deep conversion to camelCase on all keys in the provided object and its tree of\n * children.  Uses [lodash.camelcase](https://lodash.com/docs/4.17.15#camelCase) on each key.  This\n * is commonly used to convert snake_case keys in models from a backend server into camelCase keys\n * for use in the JavaScript client.\n *\n * Can accept arrays as well as objects, and will perform its conversion on any objects it finds in\n * the array.\n *\n * @param {Array|Object} object\n * @returns {Array|Object}\n */\nexport function camelCaseObject(object) {\n  return modifyObjectKeys(object, camelCase);\n}\n\n/**\n * Performs a deep conversion to snake_case on all keys in the provided object and its tree of\n * children.  Uses [lodash.snakecase](https://lodash.com/docs/4.17.15#snakeCase) on each key.  This\n * is commonly used to convert camelCase keys from the JavaScript app into snake_case keys expected\n * by backend servers.\n *\n * Can accept arrays as well as objects, and will perform its conversion on any objects it finds in\n * the array.\n *\n * @param {Array|Object} object\n * @returns {Array|Object}\n */\nexport function snakeCaseObject(object) {\n  return modifyObjectKeys(object, snakeCase);\n}\n\n/**\n * Given a map of key-value pairs, performs a deep conversion key names in the specified object\n * _from_ the key _to_ the value.  This is useful for updating names in an API request to the names\n * used throughout a client application if they happen to differ.  It can also be used in the\n * reverse - formatting names from the client application to names expected by an API.\n *\n * ```\n * import { convertKeyNames } from '@edx/frontend-base';\n *\n * // This object can be of any shape or depth with subobjects/arrays.\n * const myObject = {\n *   myKey: 'my value',\n * }\n *\n * const result = convertKeyNames(myObject, { myKey: 'their_key' });\n *\n * console.log(result) // { their_key: 'my value' }\n * ```\n *\n * Can accept arrays as well as objects, and will perform its conversion on any objects it finds in\n * the array.\n *\n * @param {Array|Object} object\n * @param {Object} nameMap\n * @returns {Array|Object}\n */\nexport function convertKeyNames(object, nameMap) {\n  const transformer = key => (nameMap[key] === undefined ? key : nameMap[key]);\n\n  return modifyObjectKeys(object, transformer);\n}\n\n/**\n * *Deprecated*: A method which converts the supplied query string into an object of\n * key-value pairs and returns it.  Defaults to the current query string - should perform like\n * [window.searchParams](https://developer.mozilla.org/en-US/docs/Web/API/URL/searchParams)\n *\n * @deprecated\n * @param {string} [search=global.location.search]\n * @returns {Object}\n */\nexport function getQueryParameters(search = global.location.search) {\n  const keyValueFragments = search\n    .slice(search.indexOf('?') + 1)\n    .split('&')\n    .filter(hash => hash !== '');\n\n  return keyValueFragments.reduce((params, keyValueFragment) => {\n    const split = keyValueFragment.indexOf('=');\n    const key = keyValueFragment.slice(0, split);\n    const value = keyValueFragment.slice(split + 1);\n    return Object.assign(params, { [key]: decodeURIComponent(value) });\n  }, {});\n}\n\n/**\n * This function helps catch a certain class of misconfiguration in which configuration variables\n * are not properly defined and/or supplied to a consumer that requires them.  Any key that exists\n * is still set to \"undefined\" indicates a misconfiguration further up in the application, and\n * should be flagged as an error, and is logged to 'warn'.\n *\n * Keys that are intended to be falsy should be defined using null, 0, false, etc.\n *\n * @param {Object} object\n * @param {string} requester A human-readable identifier for the code which called this function.\n * Used when throwing errors to aid in debugging.\n */\nexport function ensureDefinedConfig(object, requester) {\n  Object.keys(object).forEach((key) => {\n    if (object[key] === undefined) {\n      // eslint-disable-next-line no-console\n      console.warn(`Module configuration error: ${key} is required by ${requester}.`);\n    }\n  });\n}\n"],"mappings":"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"}