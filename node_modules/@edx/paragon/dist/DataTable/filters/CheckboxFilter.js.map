{"version":3,"file":"CheckboxFilter.js","names":["React","useRef","useMemo","PropTypes","Form","FormLabel","Badge","newId","LabelledCheckbox","CheckboxFilter","column","filterValue","setFilter","Header","filterChoices","getHeaderProps","ariaLabel","key","checkedBoxes","changeCheckbox","value","includes","newCheckedBoxes","filter","val","push","headerBasedId","current","map","name","number","undefined","propTypes","shape","func","isRequired","oneOfType","node","arrayOf","string"],"sources":["../../../src/DataTable/filters/CheckboxFilter.jsx"],"sourcesContent":["import React, { useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form, FormLabel, Badge,\n} from '../..';\nimport { newId } from '../../utils';\nimport LabelledCheckbox from './LabelledCheckbox';\n\nfunction CheckboxFilter({\n  column: {\n    filterValue, setFilter, Header, filterChoices, getHeaderProps,\n  },\n}) {\n  // creates a unique label that does not change on re-render in case there are multiple checkbox filters in the dom\n  const ariaLabel = useRef(newId(`checkbox-filter-label-${getHeaderProps().key}-`));\n\n  const checkedBoxes = filterValue || [];\n  const changeCheckbox = (value) => {\n    if (checkedBoxes.includes(value)) {\n      const newCheckedBoxes = checkedBoxes.filter((val) => val !== value);\n      return setFilter(newCheckedBoxes);\n    }\n    checkedBoxes.push(value);\n    return setFilter(checkedBoxes);\n  };\n  const headerBasedId = useMemo(() => `checkbox-filter-check-${getHeaderProps().key}-`, [getHeaderProps]);\n\n  return (\n    <Form.Group role=\"group\" aria-labelledby={ariaLabel.current}>\n      <FormLabel id={ariaLabel.current} className=\"pgn__checkbox-filter-label\">{Header}</FormLabel>\n      {filterChoices.map(({ name, number, value }) => (\n        <LabelledCheckbox\n          id={headerBasedId}\n          key={headerBasedId + name}\n          checked={checkedBoxes.includes(value)}\n          onChange={() => { changeCheckbox(value); }}\n          label={<>{name} {number !== undefined && <Badge variant=\"light\">{number}</Badge>}</>}\n        />\n      ))}\n    </Form.Group>\n  );\n}\n\nCheckboxFilter.propTypes = {\n  /**\n   * Specifies a column object.\n   *\n   * `setFilter`: Function to set the filter value.\n   *\n   * `Header`: Column header used for labels and placeholders.\n   *\n   * `filterChoices`: Specifies array of choices.\n   *\n   * `getHeaderProps`: Generates a key unique to the column being filtered.\n   *\n   * `filterValue`: Value for the filter input.\n   */\n  column: PropTypes.shape({\n    setFilter: PropTypes.func.isRequired,\n    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    filterChoices: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      number: PropTypes.number,\n    })).isRequired,\n    getHeaderProps: PropTypes.func.isRequired,\n    filterValue: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default CheckboxFilter;\n"],"mappings":"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"}