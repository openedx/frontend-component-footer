{"version":3,"file":"index.js","names":["React","useEffect","useMemo","useReducer","PropTypes","useTable","classNames","Table","getVisibleColumns","requiredWhen","requiredWhenNot","getTableArgs","TableControlBar","EmptyTableContent","TableFooter","BulkActions","DropdownFilters","FilterStatus","RowStatus","SelectionStatus","ControlledSelectionStatus","SmartStatus","TableFilters","TableHeaderCell","TableCell","TableHeaderRow","TablePagination","TablePaginationMinimal","DataTableContext","TableActions","ControlledSelect","ControlledSelectHeader","DataTableLayout","ExpandAll","ExpandRow","useSelectionActions","selectionsReducer","initialState","initialSelectionsState","DataTable","columns","data","defaultColumnValues","additionalColumns","isSelectable","isPaginated","manualPagination","pageCount","itemCount","isFilterable","manualFilters","fetchData","isSortable","manualSortBy","isExpandable","renderRowSubComponent","bulkActions","tableActions","numBreakoutFilters","initialTableOptions","EmptyTableComponent","manualSelectColumn","showFiltersInSidebar","dataViewToggleOptions","disableElevation","isLoading","children","props","defaultColumn","tableOptions","selections","selectionsDispatch","tableArgs","push","hooks","visibleColumns","selectionProps","selectedRows","length","selectedRowsById","forEach","row","id","useControlledState","state","selectedRowIds","selectedFlatRows","controlledTableSelections","instance","tableStateWithoutSelections","JSON","stringify","selectionActions","enhancedInstance","defaultProps","undefined","SelectionStatusComponent","FilterStatusComponent","RowStatusComponent","isDataViewToggleEnabled","onDataViewToggle","defaultActiveStateValue","togglePlacement","propTypes","arrayOf","shape","Header","oneOfType","func","node","isRequired","accessor","string","Cell","element","Filter","filter","filterChoices","name","number","value","bool","disableSortBy","pageSize","pageIndex","filters","sortBy","buttonText","handleClick","className","variant","disabled","oneOf","EmptyTable"],"sources":["../../src/DataTable/index.jsx"],"sourcesContent":["import React, {\n  useEffect, useMemo, useReducer,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTable } from 'react-table';\n\nimport classNames from 'classnames';\nimport Table from './Table';\nimport getVisibleColumns from './utils/getVisibleColumns';\nimport { requiredWhen, requiredWhenNot } from '../utils/propTypes';\nimport getTableArgs from './utils/getTableArgs';\nimport TableControlBar from './TableControlBar';\nimport EmptyTableContent from './EmptyTable';\nimport TableFooter from './TableFooter';\nimport BulkActions from './BulkActions';\nimport DropdownFilters from './DropdownFilters';\nimport FilterStatus from './FilterStatus';\nimport RowStatus from './RowStatus';\nimport SelectionStatus from './selection/SelectionStatus';\nimport ControlledSelectionStatus from './selection/ControlledSelectionStatus';\nimport SmartStatus from './SmartStatus';\nimport TableFilters from './TableFilters';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableCell from './TableCell';\nimport TableHeaderRow from './TableHeaderRow';\nimport TablePagination from './TablePagination';\nimport TablePaginationMinimal from './TablePaginationMinimal';\nimport DataTableContext from './DataTableContext';\nimport TableActions from './TableActions';\nimport ControlledSelect from './selection/ControlledSelect';\nimport ControlledSelectHeader from './selection/ControlledSelectHeader';\nimport DataTableLayout from './DataTableLayout';\nimport ExpandAll from './ExpandAll';\nimport ExpandRow from './ExpandRow';\n\nimport { useSelectionActions } from './hooks';\nimport selectionsReducer, { initialState as initialSelectionsState } from './selection/data/reducer';\n\nfunction DataTable({\n  columns, data, defaultColumnValues, additionalColumns, isSelectable,\n  isPaginated, manualPagination, pageCount, itemCount,\n  isFilterable, manualFilters, fetchData, initialState,\n  isSortable, manualSortBy,\n  isExpandable, renderRowSubComponent,\n  bulkActions, tableActions, numBreakoutFilters,\n  initialTableOptions,\n  EmptyTableComponent,\n  manualSelectColumn,\n  showFiltersInSidebar,\n  dataViewToggleOptions,\n  disableElevation,\n  isLoading,\n  children,\n  ...props\n}) {\n  const defaultColumn = useMemo(\n    () => (defaultColumnValues),\n    [defaultColumnValues],\n  );\n  const tableOptions = useMemo(() => ({\n    columns,\n    data,\n    defaultColumn,\n    manualFilters,\n    manualPagination,\n    manualSortBy,\n    initialState,\n    ...initialTableOptions,\n  }), [columns, data, defaultColumn, manualFilters, manualPagination, initialState, initialTableOptions, manualSortBy]);\n\n  const [selections, selectionsDispatch] = useReducer(selectionsReducer, initialSelectionsState);\n\n  if (isPaginated && manualPagination) {\n    // pageCount is required when pagination is manual, if it's not there passing -1 as per react-table docs\n    tableOptions.pageCount = pageCount || -1;\n  }\n\n  // NB: Table args *must* be in a particular order\n  const tableArgs = getTableArgs({\n    tableOptions, isFilterable, isSelectable, isPaginated, isSortable, isExpandable,\n  });\n  // adds selection column and action columns as necessary\n  tableArgs.push(hooks => {\n    hooks.visibleColumns.push(\n      visibleColumns => getVisibleColumns(isSelectable, visibleColumns, additionalColumns, manualSelectColumn),\n    );\n  });\n\n  // Pass any controlled selections from context to the appropriate ``useTable`` arguments to maintain\n  // correct selection states on rows, both from a data perspective and in the UI.\n  const selectionProps = {};\n  const { selectedRows } = selections;\n  if (selectedRows.length > 0) {\n    const selectedRowsById = {};\n    selectedRows.forEach((row) => {\n      selectedRowsById[row.id] = true;\n    });\n    tableArgs.push(hooks => {\n      hooks.useControlledState.push(\n        (state) => ({ ...state, selectedRowIds: selectedRowsById }),\n      );\n    });\n    selectionProps.selectedFlatRows = selectedRows;\n  }\n  const controlledTableSelections = [selections, selectionsDispatch];\n\n  // Use the state and functions returned from useTable to build your UI\n  const instance = useTable(...tableArgs);\n\n  // Call ``fetchData`` whenever the state of the table changes (e.g., page change, sort or filter applied) but ignore\n  // any state changes to current row selections as we don't want to re-fetch data whenever row(s) are selected.\n  const tableStateWithoutSelections = { ...instance.state };\n  delete tableStateWithoutSelections.selectedRowIds;\n\n  useEffect(() => {\n    if (fetchData) {\n      fetchData(tableStateWithoutSelections);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchData, JSON.stringify(tableStateWithoutSelections)]);\n\n  const selectionActions = useSelectionActions(instance, controlledTableSelections);\n\n  const enhancedInstance = {\n    ...instance,\n    itemCount,\n    numBreakoutFilters,\n    bulkActions,\n    tableActions,\n    controlledTableSelections,\n    showFiltersInSidebar,\n    dataViewToggleOptions,\n    renderRowSubComponent,\n    disableElevation,\n    isLoading,\n    ...selectionProps,\n    ...selectionActions,\n    ...props,\n  };\n\n  return (\n    <DataTableContext.Provider value={enhancedInstance}>\n      <DataTableLayout>\n        <div className={classNames('pgn__data-table-wrapper', {\n          'hide-shadow': !!disableElevation,\n        })}\n        >\n          {children || (\n          <>\n            <TableControlBar />\n            <Table />\n            <EmptyTableComponent content=\"No results found\" />\n            <TableFooter />\n          </>\n          )}\n        </div>\n      </DataTableLayout>\n    </DataTableContext.Provider>\n  );\n}\n\nDataTable.defaultProps = {\n  additionalColumns: [],\n  defaultColumnValues: {},\n  isFilterable: false,\n  isPaginated: false,\n  isSelectable: false,\n  isSortable: false,\n  manualFilters: false,\n  manualPagination: false,\n  manualSortBy: false,\n  fetchData: null,\n  initialState: {},\n  initialTableOptions: {},\n  EmptyTableComponent: EmptyTableContent,\n  children: null,\n  bulkActions: [],\n  tableActions: [],\n  numBreakoutFilters: 1,\n  manualSelectColumn: undefined,\n  SelectionStatusComponent: SelectionStatus,\n  FilterStatusComponent: FilterStatus,\n  RowStatusComponent: RowStatus,\n  showFiltersInSidebar: false,\n  dataViewToggleOptions: {\n    isDataViewToggleEnabled: false,\n    onDataViewToggle: () => {},\n    defaultActiveStateValue: 'card',\n    togglePlacement: 'left',\n  },\n  disableElevation: false,\n  renderRowSubComponent: undefined,\n  isExpandable: false,\n  isLoading: false,\n};\n\nDataTable.propTypes = {\n  /** Definition of table columns */\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    /** User visible column name */\n    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    /** String used to access the correct cell data for this column */\n    accessor: requiredWhenNot(PropTypes.string, 'Cell'),\n    /** Specifies a function that receives `row` as argument and returns cell content */\n    Cell: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n    /** Specifies filter component */\n    Filter: PropTypes.func,\n    /** Specifies filter type */\n    filter: PropTypes.string,\n    /** Specifies filter choices */\n    filterChoices: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.number,\n      value: PropTypes.string,\n    })),\n  })).isRequired,\n  /** Data to be displayed in the table */\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  /** table rows can be selected */\n  isSelectable: PropTypes.bool,\n  /** Alternate column for selecting rows. See react table useSort docs for more information */\n  manualSelectColumn: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    Cell: PropTypes.func.isRequired,\n    disableSortBy: PropTypes.bool.isRequired,\n  }),\n  /** Table columns can be sorted */\n  isSortable: PropTypes.bool,\n  /** Indicates that sorting will be done via backend API. A fetchData function must be provided */\n  manualSortBy: PropTypes.bool,\n  /** Paginate the table */\n  isPaginated: PropTypes.bool,\n  /** Indicates that pagination will be done manually. A fetchData function must be provided */\n  manualPagination: PropTypes.bool,\n  // eslint-disable-next-line react/require-default-props\n  pageCount: requiredWhen(PropTypes.number, 'manualPagination'),\n  /** Table rows can be filtered, using a default filter in the default column values, or in the column definition */\n  isFilterable: PropTypes.bool,\n  /** Indicates that filtering will be done via a backend API. A fetchData function must be provided */\n  manualFilters: PropTypes.bool,\n\n  /** defaults that will be set on each column. Will be overridden by individual column values */\n  defaultColumnValues: PropTypes.shape({\n    /** A default filter component for the column */\n    Filter: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  }),\n  /** Actions or other additional non-data columns can be added here  */\n  additionalColumns: PropTypes.arrayOf(PropTypes.shape({\n    /** id must be unique from other columns ids */\n    id: PropTypes.string.isRequired,\n    /** column header that will be displayed to the user */\n    Header: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    /** Component that renders in the added column. It will receive the row as a prop */\n    Cell: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  })),\n  /** Function that will fetch table data. Called when page size, page index or filters change.\n    * Meant to be used with manual filters and pagination */\n  fetchData: PropTypes.func,\n  /** Initial state passed to react-table's documentation https://react-table.tanstack.com/docs/api/useTable */\n  initialState: PropTypes.shape({\n    pageSize: requiredWhen(PropTypes.number, 'isPaginated'),\n    pageIndex: requiredWhen(PropTypes.number, 'isPaginated'),\n    filters: requiredWhen(PropTypes.arrayOf(PropTypes.shape()), 'manualFilters'),\n    sortBy: requiredWhen(PropTypes.arrayOf(PropTypes.shape()), 'manualSortBy'),\n  }),\n  /** Table options passed to react-table's useTable hook. Will override some options passed in to DataTable, such\n     as: data, columns, defaultColumn, manualFilters, manualPagination, manualSortBy, and initialState */\n  initialTableOptions: PropTypes.shape({}),\n  /** Actions to be performed on the table. Called with the table instance. Not displayed if rows are selected. */\n  itemCount: PropTypes.number.isRequired,\n  /** Actions to be performed on selected rows of the table. Called with the selected rows.\n   *  Only displayed if rows are selected. */\n  bulkActions: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          /** Bulk action button text */\n          buttonText: PropTypes.string.isRequired,\n          /** handleClick will be passed the selected rows */\n          handleClick: PropTypes.func.isRequired,\n          /** classnames for button class */\n          className: PropTypes.string,\n          /** optional button variant; only relevant for the first two buttons */\n          variant: PropTypes.string,\n          /** disables button */\n          disabled: PropTypes.bool,\n        }),\n        /** function passed selected items, should return action object */\n        PropTypes.func,\n        /** A custom component representing an action */\n        PropTypes.element,\n      ]),\n    ),\n    /** Function for rendering custom components */\n    PropTypes.func,\n    /** A custom component representing an action */\n    PropTypes.element,\n  ]),\n  /** Function for rendering custom components, called with the table instance */\n  tableActions: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          /** Bulk action button text */\n          buttonText: PropTypes.string.isRequired,\n          /** handleClick will be passed the selected rows */\n          handleClick: PropTypes.func.isRequired,\n          /** classnames for button class */\n          className: PropTypes.string,\n          /** optional button variant; only relevant for the first two buttons */\n          variant: PropTypes.string,\n          /** disables button */\n          disabled: PropTypes.bool,\n        }),\n        /** function passed table instance, should return action object */\n        PropTypes.func,\n        /** A custom component representing an action */\n        PropTypes.element,\n      ]),\n    ),\n    /** Function for rendering custom components */\n    PropTypes.func,\n    /** A custom component representing an action */\n    PropTypes.element,\n  ]),\n  /** Number between one and four filters that can be shown on the top row. */\n  numBreakoutFilters: PropTypes.oneOf([1, 2, 3, 4]),\n  /** Component to be displayed when the table is empty */\n  EmptyTableComponent: PropTypes.func,\n  /** Component to be displayed for row status, ie, 10 of 20 rows. Displayed by default in the TableControlBar */\n  RowStatusComponent: PropTypes.func,\n  /** Component to be displayed for selection status. Displayed when there are selected rows and no active filters */\n  SelectionStatusComponent: PropTypes.func,\n  /** Component to be displayed for filter status. Displayed when there are active filters. */\n  FilterStatusComponent: PropTypes.func,\n  /** If children are not provided a table with control bar and footer will be rendered */\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  /** If true filters will be shown on sidebar instead */\n  showFiltersInSidebar: PropTypes.bool,\n  /** options for data view toggle */\n  dataViewToggleOptions: PropTypes.shape({\n    /** Whether to show a toggle button group which allows view switching between card and table views */\n    isDataViewToggleEnabled: PropTypes.bool,\n    /** Callback invoked when the toggle buttons are clicked, with value of selected button passed in */\n    onDataViewToggle: PropTypes.func,\n    /** default value for toggle active state */\n    defaultActiveStateValue: PropTypes.string,\n    /** placement of toggle 'bottom' will push it to the bottom row in\n     * actions section. Only 'left' and 'bottom' are supported */\n    togglePlacement: PropTypes.string,\n  }),\n  /** remove the default box shadow on the component */\n  disableElevation: PropTypes.bool,\n  /** A function that will render contents of expanded row, accepts `row` as a prop. */\n  renderRowSubComponent: PropTypes.func,\n  /** Indicates whether table supports expandable rows. */\n  isExpandable: PropTypes.bool,\n  isLoading: PropTypes.bool,\n};\n\nDataTable.BulkActions = BulkActions;\nDataTable.EmptyTable = EmptyTableContent;\nDataTable.DropdownFilters = DropdownFilters;\nDataTable.FilterStatus = FilterStatus;\nDataTable.RowStatus = RowStatus;\nDataTable.SelectionStatus = SelectionStatus;\nDataTable.SmartStatus = SmartStatus;\nDataTable.Table = Table;\nDataTable.TableCell = TableCell;\nDataTable.TableControlBar = TableControlBar;\nDataTable.TableFilters = TableFilters;\nDataTable.TableFooter = TableFooter;\nDataTable.TableHeaderCell = TableHeaderCell;\nDataTable.TableHeaderRow = TableHeaderRow;\nDataTable.TablePagination = TablePagination;\nDataTable.TablePaginationMinimal = TablePaginationMinimal;\nDataTable.TableActions = TableActions;\nDataTable.ControlledSelectionStatus = ControlledSelectionStatus;\nDataTable.ControlledSelect = ControlledSelect;\nDataTable.ControlledSelectHeader = ControlledSelectHeader;\nDataTable.ExpandAll = ExpandAll;\nDataTable.ExpandRow = ExpandRow;\n\nexport default DataTable;\n"],"mappings":"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"}