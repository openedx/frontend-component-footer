{"version":3,"file":"ControlledSelectionStatus.js","names":["React","useContext","useEffect","PropTypes","DataTableContext","BaseSelectionStatus","clearSelectionAction","setSelectAllRowsAllPagesAction","setSelectedRowsAction","getUnselectedPageRows","getRowIds","CLEAR_SELECTION_TEXT","ControlledSelectionStatus","className","clearSelectionText","itemCount","rows","controlledTableSelections","selectedRows","isEntireTableSelected","dispatch","selectedRowIds","unselectedPageRows","length","numSelectedRows","selectionStatusProps","onSelectAll","onClear","defaultProps","undefined","propTypes","string"],"sources":["../../../src/DataTable/selection/ControlledSelectionStatus.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DataTableContext from '../DataTableContext';\nimport BaseSelectionStatus from './BaseSelectionStatus';\n\nimport {\n  clearSelectionAction,\n  setSelectAllRowsAllPagesAction,\n  setSelectedRowsAction,\n} from './data/actions';\nimport {\n  getUnselectedPageRows,\n  getRowIds,\n} from './data/helpers';\nimport { CLEAR_SELECTION_TEXT } from './data/constants';\n\nconst ControlledSelectionStatus = ({ className, clearSelectionText }) => {\n  const {\n    itemCount,\n    rows,\n    controlledTableSelections: [{ selectedRows, isEntireTableSelected }, dispatch],\n  } = useContext(DataTableContext);\n\n  useEffect(\n    () => {\n      if (isEntireTableSelected) {\n        const selectedRowIds = getRowIds(selectedRows);\n        const unselectedPageRows = getUnselectedPageRows(selectedRowIds, rows);\n        if (unselectedPageRows?.length) {\n          dispatch(setSelectedRowsAction(unselectedPageRows, itemCount));\n        }\n      }\n    },\n    [isEntireTableSelected, selectedRows, itemCount, rows, dispatch],\n  );\n\n  const numSelectedRows = isEntireTableSelected ? itemCount : selectedRows.length;\n\n  const selectionStatusProps = {\n    className,\n    numSelectedRows,\n    clearSelectionText,\n    onSelectAll: () => dispatch(setSelectAllRowsAllPagesAction()),\n    onClear: () => dispatch(clearSelectionAction()),\n  };\n  return <BaseSelectionStatus {...selectionStatusProps} />;\n};\n\nControlledSelectionStatus.defaultProps = {\n  className: undefined,\n  clearSelectionText: CLEAR_SELECTION_TEXT,\n};\n\nControlledSelectionStatus.propTypes = {\n  className: PropTypes.string,\n  clearSelectionText: PropTypes.string,\n};\n\nexport default ControlledSelectionStatus;\n"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,SACEC,oBADF,EAEEC,8BAFF,EAGEC,qBAHF,QAIO,gBAJP;AAKA,SACEC,qBADF,EAEEC,SAFF,QAGO,gBAHP;AAIA,SAASC,oBAAT,QAAqC,kBAArC;;AAEA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,OAAuC;EAAA,IAApCC,SAAoC,QAApCA,SAAoC;EAAA,IAAzBC,kBAAyB,QAAzBA,kBAAyB;;EACvE,kBAIIb,UAAU,CAACG,gBAAD,CAJd;EAAA,IACEW,SADF,eACEA,SADF;EAAA,IAEEC,IAFF,eAEEA,IAFF;EAAA,uDAGEC,yBAHF;EAAA;EAAA,IAGgCC,YAHhC,0BAGgCA,YAHhC;EAAA,IAG8CC,qBAH9C,0BAG8CA,qBAH9C;EAAA,IAGuEC,QAHvE;;EAMAlB,SAAS,CACP,YAAM;IACJ,IAAIiB,qBAAJ,EAA2B;MACzB,IAAME,cAAc,GAAGX,SAAS,CAACQ,YAAD,CAAhC;MACA,IAAMI,kBAAkB,GAAGb,qBAAqB,CAACY,cAAD,EAAiBL,IAAjB,CAAhD;;MACA,IAAIM,kBAAJ,aAAIA,kBAAJ,eAAIA,kBAAkB,CAAEC,MAAxB,EAAgC;QAC9BH,QAAQ,CAACZ,qBAAqB,CAACc,kBAAD,EAAqBP,SAArB,CAAtB,CAAR;MACD;IACF;EACF,CATM,EAUP,CAACI,qBAAD,EAAwBD,YAAxB,EAAsCH,SAAtC,EAAiDC,IAAjD,EAAuDI,QAAvD,CAVO,CAAT;EAaA,IAAMI,eAAe,GAAGL,qBAAqB,GAAGJ,SAAH,GAAeG,YAAY,CAACK,MAAzE;EAEA,IAAME,oBAAoB,GAAG;IAC3BZ,SAAS,EAATA,SAD2B;IAE3BW,eAAe,EAAfA,eAF2B;IAG3BV,kBAAkB,EAAlBA,kBAH2B;IAI3BY,WAAW,EAAE;MAAA,OAAMN,QAAQ,CAACb,8BAA8B,EAA/B,CAAd;IAAA,CAJc;IAK3BoB,OAAO,EAAE;MAAA,OAAMP,QAAQ,CAACd,oBAAoB,EAArB,CAAd;IAAA;EALkB,CAA7B;EAOA,oBAAO,oBAAC,mBAAD,EAAyBmB,oBAAzB,CAAP;AACD,CA9BD;;AAgCAb,yBAAyB,CAACgB,YAA1B,GAAyC;EACvCf,SAAS,EAAEgB,SAD4B;EAEvCf,kBAAkB,EAAEH;AAFmB,CAAzC;AAKAC,yBAAyB,CAACkB,SAA1B,GAAsC;EACpCjB,SAAS,EAAEV,SAAS,CAAC4B,MADe;EAEpCjB,kBAAkB,EAAEX,SAAS,CAAC4B;AAFM,CAAtC;AAKA,eAAenB,yBAAf"}