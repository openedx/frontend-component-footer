{"version":3,"file":"reducer.test.js","names":["selectionsReducer","initialState","defaultInitialState","setSelectedRowsAction","setSelectAllRowsAllPagesAction","deleteSelectedRowAction","addSelectedRowAction","clearSelectionAction","clearPageSelectionAction","describe","it","rows","id","itemCount","action","updatedState","expect","toEqual","selectedRows","isEntireTableSelected","row","type"],"sources":["../../../../src/DataTable/selection/tests/reducer.test.js"],"sourcesContent":["import selectionsReducer, { initialState as defaultInitialState } from '../data/reducer';\nimport {\n  setSelectedRowsAction,\n  setSelectAllRowsAllPagesAction,\n  deleteSelectedRowAction,\n  addSelectedRowAction,\n  clearSelectionAction,\n  clearPageSelectionAction,\n} from '../data/actions';\n\ndescribe('DataTable selections reducer', () => {\n  it('sets individual selected rows', () => {\n    const rows = [{ id: 1 }, { id: 2 }, { id: 3 }];\n    const itemCount = 20;\n    const action = setSelectedRowsAction(rows, itemCount);\n    const updatedState = selectionsReducer(defaultInitialState, action);\n    expect(updatedState).toEqual({\n      ...defaultInitialState,\n      selectedRows: rows,\n    });\n  });\n  it('sets selected rows, when the entire table is selected', () => {\n    const rows = [{ id: 1 }, { id: 2 }, { id: 3 }];\n    const itemCount = 3;\n    const action = setSelectedRowsAction(rows, itemCount);\n    const updatedState = selectionsReducer(defaultInitialState, action);\n    expect(updatedState).toEqual({\n      isEntireTableSelected: true,\n      selectedRows: rows,\n    });\n  });\n  it('selects entire table', () => {\n    const initialState = {\n      ...defaultInitialState,\n      selectedRows: [{ id: 1 }, { id: 2 }, { id: 3 }],\n    };\n    const action = setSelectAllRowsAllPagesAction();\n    const updatedState = selectionsReducer(initialState, action);\n    expect(updatedState).toEqual({\n      isEntireTableSelected: true,\n      selectedRows: initialState.selectedRows,\n    });\n  });\n  it('deletes a selected row', () => {\n    const rows = [{ id: 1 }, { id: 2 }, { id: 3 }];\n    const initialState = {\n      ...defaultInitialState,\n      selectedRows: rows,\n    };\n    const action = deleteSelectedRowAction(1);\n    const updatedState = selectionsReducer(initialState, action);\n    expect(updatedState).toEqual({\n      ...defaultInitialState,\n      selectedRows: [{ id: 2 }, { id: 3 }],\n    });\n  });\n  it('adds a selected row', () => {\n    const row = { id: 1 };\n    const itemCount = 5;\n    const action = addSelectedRowAction(row, itemCount);\n    const updatedState = selectionsReducer(defaultInitialState, action);\n    expect(updatedState).toEqual({\n      ...defaultInitialState,\n      selectedRows: [row],\n    });\n  });\n  it('adds a selected row, when entire table is selected', () => {\n    const row = { id: 1 };\n    const itemCount = 1;\n    const action = addSelectedRowAction(row, itemCount);\n    const updatedState = selectionsReducer(defaultInitialState, action);\n    expect(updatedState).toEqual({\n      selectedRows: [row],\n      isEntireTableSelected: true,\n    });\n  });\n  it('clears all selections and resets to default initial state', () => {\n    const rows = [{ id: 1 }, { id: 2 }, { id: 3 }];\n    const initialState = {\n      ...defaultInitialState,\n      selectedRows: rows,\n    };\n    const action = clearSelectionAction();\n    const updatedState = selectionsReducer(initialState, action);\n    expect(updatedState).toEqual(defaultInitialState);\n  });\n  it('clears page selections', () => {\n    const rows = [{ id: 1 }, { id: 2 }, { id: 3 }];\n    const initialState = {\n      ...defaultInitialState,\n      selectedRows: rows,\n    };\n    const action = clearPageSelectionAction([1, 2]);\n    const updatedState = selectionsReducer(initialState, action);\n    expect(updatedState).toEqual({\n      ...defaultInitialState,\n      selectedRows: [{ id: 3 }],\n    });\n  });\n  it('handles unknown action', () => {\n    const action = { type: 'SOME UNKNOWN ACTION' };\n    const updatedState = selectionsReducer(defaultInitialState, action);\n    expect(updatedState).toEqual(defaultInitialState);\n  });\n});\n"],"mappings":"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"}