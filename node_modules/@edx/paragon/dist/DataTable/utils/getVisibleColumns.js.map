{"version":3,"file":"getVisibleColumns.js","names":["React","useMemo","CheckboxControl","useConvertIndeterminateProp","selectColumn","id","Header","getToggleAllPageRowsSelectedProps","getToggleAllRowsSelectedProps","page","toggleRowsSelectedProps","getToggleRowsSelectedProps","updatedProps","Cell","row","getToggleRowSelectedProps","disableSortBy","getVisibleColumns","isSelectable","visibleColumns","additionalColumns","manualSelectColumn","columns","push","concat","length"],"sources":["../../../src/DataTable/utils/getVisibleColumns.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\nimport { CheckboxControl } from '../../Form';\nimport useConvertIndeterminateProp from './useConvertIndeterminateProp';\n\nexport const selectColumn = {\n  id: 'selection',\n  // The header can use the table's getToggleAllPageRowsSelectedProps or getToggleAllRowsSelectedProps\n  // method to render a checkbox. The method is determined based on whether pagination is enabled or\n  // not (i.e., ``page`` is defined).\n  // Proptypes disabled as these props are passed in separately\n  /* eslint-disable-next-line react/prop-types */\n  Header: ({ getToggleAllPageRowsSelectedProps, getToggleAllRowsSelectedProps, page }) => {\n    const toggleRowsSelectedProps = useMemo(\n      () => {\n        // determine if this selection is for an individual page or the entire table\n        const getToggleRowsSelectedProps = page ? getToggleAllPageRowsSelectedProps : getToggleAllRowsSelectedProps;\n        return getToggleRowsSelectedProps();\n      },\n      [getToggleAllPageRowsSelectedProps, getToggleAllRowsSelectedProps, page],\n    );\n    const updatedProps = useConvertIndeterminateProp(toggleRowsSelectedProps);\n\n    return (\n      <div className=\"d-flex align-content-center p-1\">\n        <CheckboxControl {...updatedProps} />\n      </div>\n    );\n  },\n  // The cell can use the individual row's getToggleRowSelectedProps method\n  // to the render a checkbox\n  // Proptypes disabled as this prop is passed in separately\n  /* eslint-disable react/prop-types */\n  Cell: ({ row }) => {\n    const updatedProps = useConvertIndeterminateProp(row.getToggleRowSelectedProps());\n\n    return (\n      <div className=\"d-flex align-content-center p-1\">\n        <CheckboxControl {...updatedProps} />\n      </div>\n    );\n  },\n  /* eslint-enable react/prop-types */\n  disableSortBy: true,\n};\n\nconst getVisibleColumns = (\n  isSelectable,\n  visibleColumns,\n  additionalColumns = [],\n  manualSelectColumn = selectColumn,\n) => {\n  let columns = [];\n  if (isSelectable) {\n    columns.push(manualSelectColumn);\n  }\n  columns = columns.concat(visibleColumns);\n  if (additionalColumns.length > 0) {\n    columns = columns.concat(additionalColumns);\n  }\n  return columns;\n};\n\nexport default getVisibleColumns;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,2BAAP,MAAwC,+BAAxC;AAEA,OAAO,IAAMC,YAAY,GAAG;EAC1BC,EAAE,EAAE,WADsB;EAE1B;EACA;EACA;EACA;;EACA;EACAC,MAAM,EAAE,sBAAgF;IAAA,IAA7EC,iCAA6E,QAA7EA,iCAA6E;IAAA,IAA1CC,6BAA0C,QAA1CA,6BAA0C;IAAA,IAAXC,IAAW,QAAXA,IAAW;IACtF,IAAMC,uBAAuB,GAAGT,OAAO,CACrC,YAAM;MACJ;MACA,IAAMU,0BAA0B,GAAGF,IAAI,GAAGF,iCAAH,GAAuCC,6BAA9E;MACA,OAAOG,0BAA0B,EAAjC;IACD,CALoC,EAMrC,CAACJ,iCAAD,EAAoCC,6BAApC,EAAmEC,IAAnE,CANqC,CAAvC;IAQA,IAAMG,YAAY,GAAGT,2BAA2B,CAACO,uBAAD,CAAhD;IAEA,oBACE;MAAK,SAAS,EAAC;IAAf,gBACE,oBAAC,eAAD,EAAqBE,YAArB,CADF,CADF;EAKD,CAvByB;EAwB1B;EACA;EACA;;EACA;EACAC,IAAI,EAAE,qBAAa;IAAA,IAAVC,GAAU,SAAVA,GAAU;IACjB,IAAMF,YAAY,GAAGT,2BAA2B,CAACW,GAAG,CAACC,yBAAJ,EAAD,CAAhD;IAEA,oBACE;MAAK,SAAS,EAAC;IAAf,gBACE,oBAAC,eAAD,EAAqBH,YAArB,CADF,CADF;EAKD,CApCyB;;EAqC1B;EACAI,aAAa,EAAE;AAtCW,CAArB;;AAyCP,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CACxBC,YADwB,EAExBC,cAFwB,EAKrB;EAAA,IAFHC,iBAEG,uEAFiB,EAEjB;EAAA,IADHC,kBACG,uEADkBjB,YAClB;EACH,IAAIkB,OAAO,GAAG,EAAd;;EACA,IAAIJ,YAAJ,EAAkB;IAChBI,OAAO,CAACC,IAAR,CAAaF,kBAAb;EACD;;EACDC,OAAO,GAAGA,OAAO,CAACE,MAAR,CAAeL,cAAf,CAAV;;EACA,IAAIC,iBAAiB,CAACK,MAAlB,GAA2B,CAA/B,EAAkC;IAChCH,OAAO,GAAGA,OAAO,CAACE,MAAR,CAAeJ,iBAAf,CAAV;EACD;;EACD,OAAOE,OAAP;AACD,CAfD;;AAiBA,eAAeL,iBAAf"}