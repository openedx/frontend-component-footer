{"version":3,"file":"getTableArgs.test.js","names":["useSortBy","useFilters","useRowSelect","usePagination","useExpanded","getTableArgs","describe","tableOptions","foo","it","expect","toEqual","test","each","isFilterable","isSelectable","isSortable","isPaginated","isExpandable","input","expectedResult"],"sources":["../../../../src/DataTable/utils/tests/getTableArgs.test.js"],"sourcesContent":["/* eslint-disable object-curly-newline */\nimport {\n  useSortBy, useFilters, useRowSelect, usePagination, useExpanded,\n} from 'react-table';\nimport getTableArgs from '../getTableArgs';\n\ndescribe('getTableArgs', () => {\n  const tableOptions = { foo: 'bar' };\n  it('returns tableOptions if no other arguments are given', () => {\n    expect(getTableArgs({ tableOptions })).toEqual([tableOptions]);\n  });\n  // order is important for these arguments\n  test.each([\n    [{ tableOptions, isFilterable: true }, [tableOptions, useFilters]],\n    [{ tableOptions, isSelectable: true }, [tableOptions, useRowSelect]],\n    [{ tableOptions, isSortable: true }, [tableOptions, useSortBy]],\n    [{ tableOptions, isPaginated: true }, [tableOptions, usePagination]],\n    [{ tableOptions, isExpandable: true }, [tableOptions, useExpanded]],\n    [{ tableOptions, isFilterable: true, isSelectable: true }, [tableOptions, useFilters, useRowSelect]],\n    [{ tableOptions, isFilterable: true, isExpandable: true }, [tableOptions, useFilters, useExpanded]],\n    [\n      { tableOptions, isFilterable: true, isSelectable: true, isSortable: true, isPaginated: true, isExpandable: true },\n      [tableOptions, useFilters, useSortBy, useExpanded, usePagination, useRowSelect],\n    ],\n    [\n      { tableOptions, isSelectable: true, isSortable: true },\n      [tableOptions, useSortBy, useRowSelect],\n    ],\n    [\n      { tableOptions, isFilterable: true, isPaginated: true },\n      [tableOptions, useFilters, usePagination],\n    ],\n    [\n      { tableOptions, isPaginated: true, isExpandable: true },\n      [tableOptions, useExpanded, usePagination],\n    ],\n  ])('returns functions in order %#', (input, expectedResult) => {\n    expect(getTableArgs(input)).toEqual(expectedResult);\n  });\n});\n"],"mappings":"AAAA;AACA,SACEA,SADF,EACaC,UADb,EACyBC,YADzB,EACuCC,aADvC,EACsDC,WADtD,QAEO,aAFP;AAGA,OAAOC,YAAP,MAAyB,iBAAzB;AAEAC,QAAQ,CAAC,cAAD,EAAiB,YAAM;EAC7B,IAAMC,YAAY,GAAG;IAAEC,GAAG,EAAE;EAAP,CAArB;EACAC,EAAE,CAAC,sDAAD,EAAyD,YAAM;IAC/DC,MAAM,CAACL,YAAY,CAAC;MAAEE,YAAY,EAAZA;IAAF,CAAD,CAAb,CAAN,CAAuCI,OAAvC,CAA+C,CAACJ,YAAD,CAA/C;EACD,CAFC,CAAF,CAF6B,CAK7B;;EACAK,IAAI,CAACC,IAAL,CAAU,CACR,CAAC;IAAEN,YAAY,EAAZA,YAAF;IAAgBO,YAAY,EAAE;EAA9B,CAAD,EAAuC,CAACP,YAAD,EAAeN,UAAf,CAAvC,CADQ,EAER,CAAC;IAAEM,YAAY,EAAZA,YAAF;IAAgBQ,YAAY,EAAE;EAA9B,CAAD,EAAuC,CAACR,YAAD,EAAeL,YAAf,CAAvC,CAFQ,EAGR,CAAC;IAAEK,YAAY,EAAZA,YAAF;IAAgBS,UAAU,EAAE;EAA5B,CAAD,EAAqC,CAACT,YAAD,EAAeP,SAAf,CAArC,CAHQ,EAIR,CAAC;IAAEO,YAAY,EAAZA,YAAF;IAAgBU,WAAW,EAAE;EAA7B,CAAD,EAAsC,CAACV,YAAD,EAAeJ,aAAf,CAAtC,CAJQ,EAKR,CAAC;IAAEI,YAAY,EAAZA,YAAF;IAAgBW,YAAY,EAAE;EAA9B,CAAD,EAAuC,CAACX,YAAD,EAAeH,WAAf,CAAvC,CALQ,EAMR,CAAC;IAAEG,YAAY,EAAZA,YAAF;IAAgBO,YAAY,EAAE,IAA9B;IAAoCC,YAAY,EAAE;EAAlD,CAAD,EAA2D,CAACR,YAAD,EAAeN,UAAf,EAA2BC,YAA3B,CAA3D,CANQ,EAOR,CAAC;IAAEK,YAAY,EAAZA,YAAF;IAAgBO,YAAY,EAAE,IAA9B;IAAoCI,YAAY,EAAE;EAAlD,CAAD,EAA2D,CAACX,YAAD,EAAeN,UAAf,EAA2BG,WAA3B,CAA3D,CAPQ,EAQR,CACE;IAAEG,YAAY,EAAZA,YAAF;IAAgBO,YAAY,EAAE,IAA9B;IAAoCC,YAAY,EAAE,IAAlD;IAAwDC,UAAU,EAAE,IAApE;IAA0EC,WAAW,EAAE,IAAvF;IAA6FC,YAAY,EAAE;EAA3G,CADF,EAEE,CAACX,YAAD,EAAeN,UAAf,EAA2BD,SAA3B,EAAsCI,WAAtC,EAAmDD,aAAnD,EAAkED,YAAlE,CAFF,CARQ,EAYR,CACE;IAAEK,YAAY,EAAZA,YAAF;IAAgBQ,YAAY,EAAE,IAA9B;IAAoCC,UAAU,EAAE;EAAhD,CADF,EAEE,CAACT,YAAD,EAAeP,SAAf,EAA0BE,YAA1B,CAFF,CAZQ,EAgBR,CACE;IAAEK,YAAY,EAAZA,YAAF;IAAgBO,YAAY,EAAE,IAA9B;IAAoCG,WAAW,EAAE;EAAjD,CADF,EAEE,CAACV,YAAD,EAAeN,UAAf,EAA2BE,aAA3B,CAFF,CAhBQ,EAoBR,CACE;IAAEI,YAAY,EAAZA,YAAF;IAAgBU,WAAW,EAAE,IAA7B;IAAmCC,YAAY,EAAE;EAAjD,CADF,EAEE,CAACX,YAAD,EAAeH,WAAf,EAA4BD,aAA5B,CAFF,CApBQ,CAAV,EAwBG,+BAxBH,EAwBoC,UAACgB,KAAD,EAAQC,cAAR,EAA2B;IAC7DV,MAAM,CAACL,YAAY,CAACc,KAAD,CAAb,CAAN,CAA4BR,OAA5B,CAAoCS,cAApC;EACD,CA1BD;AA2BD,CAjCO,CAAR"}