{"version":3,"file":"FormCheckbox.js","names":["React","PropTypes","classNames","useCheckboxSetContext","FormGroupContextProvider","useFormGroupContext","FormLabel","FormControlFeedback","CheckboxControl","forwardRef","ref","isIndeterminate","props","defaultRef","useRef","resolvedRef","getControlProps","checkboxProps","className","useEffect","current","indeterminate","propTypes","bool","string","defaultProps","undefined","FormCheckbox","children","controlClassName","labelClassName","description","isInvalid","isValid","controlAs","floatLabelLeft","getCheckboxControlProps","hasCheckboxSetProvider","hasFormGroupProvider","useSetIsControlGroupEffect","shouldActAsGroup","groupProps","role","checkboxInputProps","control","createElement","id","disabled","node","isRequired","elementType"],"sources":["../../src/Form/FormCheckbox.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useCheckboxSetContext } from './FormCheckboxSetContext';\nimport { FormGroupContextProvider, useFormGroupContext } from './FormGroupContext';\nimport FormLabel from './FormLabel';\nimport FormControlFeedback from './FormControlFeedback';\n\nconst CheckboxControl = React.forwardRef(\n  ({ isIndeterminate, ...props }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n    const { getControlProps } = useFormGroupContext();\n    const checkboxProps = getControlProps({\n      ...props,\n      className: classNames('pgn__form-checkbox-input', props.className),\n    });\n    React.useEffect(() => {\n      // this if(resolvedRef.current) prevents console errors in testing\n      if (resolvedRef.current) {\n        resolvedRef.current.indeterminate = isIndeterminate;\n      }\n    }, [resolvedRef, isIndeterminate]);\n\n    return (\n      <input\n        type=\"checkbox\"\n        {...checkboxProps}\n        ref={resolvedRef}\n      />\n    );\n  },\n);\n\nCheckboxControl.propTypes = {\n  /** Specifies whether the checkbox should be rendered in indeterminate state. */\n  isIndeterminate: PropTypes.bool,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n};\n\nCheckboxControl.defaultProps = {\n  isIndeterminate: false,\n  className: undefined,\n};\n\nconst FormCheckbox = React.forwardRef(({\n  children,\n  className,\n  controlClassName,\n  labelClassName,\n  description,\n  isInvalid,\n  isValid,\n  controlAs,\n  floatLabelLeft,\n  ...props\n}, ref) => {\n  const { getCheckboxControlProps, hasCheckboxSetProvider } = useCheckboxSetContext();\n  const { hasFormGroupProvider, useSetIsControlGroupEffect, getControlProps } = useFormGroupContext();\n  useSetIsControlGroupEffect(true);\n  const shouldActAsGroup = hasFormGroupProvider && !hasCheckboxSetProvider;\n  const groupProps = shouldActAsGroup ? {\n    ...getControlProps({}),\n    role: 'group',\n  } : {};\n  const checkboxInputProps = getCheckboxControlProps({\n    ...props,\n    className: controlClassName,\n  });\n  const control = React.createElement(controlAs, { ...checkboxInputProps, ref });\n  return (\n    <FormGroupContextProvider\n      controlId={checkboxInputProps.id}\n      isInvalid={isInvalid}\n      isValid={isValid}\n    >\n      <div\n        className={classNames('pgn__form-checkbox', className, {\n          'pgn__form-control-valid': isValid,\n          'pgn__form-control-invalid': isInvalid,\n          'pgn__form-control-disabled': checkboxInputProps.disabled,\n          'pgn__form-control-label-left': !!floatLabelLeft,\n        })}\n        {...groupProps}\n      >\n        {control}\n        <div>\n          <FormLabel className={labelClassName}>\n            {children}\n          </FormLabel>\n          {description && (\n            <FormControlFeedback hasIcon={false}>\n              {description}\n            </FormControlFeedback>\n          )}\n        </div>\n      </div>\n    </FormGroupContextProvider>\n  );\n});\n\nFormCheckbox.propTypes = {\n  /** Specifies contents of the component. */\n  children: PropTypes.node.isRequired,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies class name for control component. */\n  controlClassName: PropTypes.string,\n  /** Specifies class name for label component. */\n  labelClassName: PropTypes.string,\n  /** Specifies description to show under the checkbox. */\n  description: PropTypes.node,\n  /** Specifies whether to display checkbox in invalid state, this affects styling. */\n  isInvalid: PropTypes.bool,\n  /** Specifies whether to display checkbox in valid state, this affects styling. */\n  isValid: PropTypes.bool,\n  /** Specifies control element. */\n  controlAs: PropTypes.elementType,\n  floatLabelLeft: PropTypes.bool,\n};\n\nFormCheckbox.defaultProps = {\n  className: undefined,\n  controlClassName: undefined,\n  labelClassName: undefined,\n  description: undefined,\n  isInvalid: false,\n  isValid: false,\n  controlAs: CheckboxControl,\n  floatLabelLeft: false,\n};\n\nexport { CheckboxControl };\nexport default FormCheckbox;\n"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,wBAAT,EAAmCC,mBAAnC,QAA8D,oBAA9D;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,IAAMC,eAAe,gBAAGR,KAAK,CAACS,UAAN,CACtB,gBAAgCC,GAAhC,EAAwC;EAAA,IAArCC,eAAqC,QAArCA,eAAqC;EAAA,IAAjBC,KAAiB;;EACtC,IAAMC,UAAU,GAAGb,KAAK,CAACc,MAAN,EAAnB;EACA,IAAMC,WAAW,GAAGL,GAAG,IAAIG,UAA3B;;EACA,2BAA4BR,mBAAmB,EAA/C;EAAA,IAAQW,eAAR,wBAAQA,eAAR;;EACA,IAAMC,aAAa,GAAGD,eAAe,iCAChCJ,KADgC;IAEnCM,SAAS,EAAEhB,UAAU,CAAC,0BAAD,EAA6BU,KAAK,CAACM,SAAnC;EAFc,GAArC;EAIAlB,KAAK,CAACmB,SAAN,CAAgB,YAAM;IACpB;IACA,IAAIJ,WAAW,CAACK,OAAhB,EAAyB;MACvBL,WAAW,CAACK,OAAZ,CAAoBC,aAApB,GAAoCV,eAApC;IACD;EACF,CALD,EAKG,CAACI,WAAD,EAAcJ,eAAd,CALH;EAOA,oBACE;IACE,IAAI,EAAC;EADP,GAEMM,aAFN;IAGE,GAAG,EAAEF;EAHP,GADF;AAOD,CAvBqB,CAAxB;AA0BAP,eAAe,CAACc,SAAhB,GAA4B;EAC1B;EACAX,eAAe,EAAEV,SAAS,CAACsB,IAFD;;EAG1B;EACAL,SAAS,EAAEjB,SAAS,CAACuB;AAJK,CAA5B;AAOAhB,eAAe,CAACiB,YAAhB,GAA+B;EAC7Bd,eAAe,EAAE,KADY;EAE7BO,SAAS,EAAEQ;AAFkB,CAA/B;AAKA,IAAMC,YAAY,gBAAG3B,KAAK,CAACS,UAAN,CAAiB,iBAWnCC,GAXmC,EAW3B;EAAA,IAVTkB,QAUS,SAVTA,QAUS;EAAA,IATTV,SASS,SATTA,SASS;EAAA,IARTW,gBAQS,SARTA,gBAQS;EAAA,IAPTC,cAOS,SAPTA,cAOS;EAAA,IANTC,WAMS,SANTA,WAMS;EAAA,IALTC,SAKS,SALTA,SAKS;EAAA,IAJTC,OAIS,SAJTA,OAIS;EAAA,IAHTC,SAGS,SAHTA,SAGS;EAAA,IAFTC,cAES,SAFTA,cAES;EAAA,IADNvB,KACM;;EACT,4BAA4DT,qBAAqB,EAAjF;EAAA,IAAQiC,uBAAR,yBAAQA,uBAAR;EAAA,IAAiCC,sBAAjC,yBAAiCA,sBAAjC;;EACA,4BAA8EhC,mBAAmB,EAAjG;EAAA,IAAQiC,oBAAR,yBAAQA,oBAAR;EAAA,IAA8BC,0BAA9B,yBAA8BA,0BAA9B;EAAA,IAA0DvB,eAA1D,yBAA0DA,eAA1D;;EACAuB,0BAA0B,CAAC,IAAD,CAA1B;EACA,IAAMC,gBAAgB,GAAGF,oBAAoB,IAAI,CAACD,sBAAlD;EACA,IAAMI,UAAU,GAAGD,gBAAgB,mCAC9BxB,eAAe,CAAC,EAAD,CADe;IAEjC0B,IAAI,EAAE;EAF2B,KAG/B,EAHJ;EAIA,IAAMC,kBAAkB,GAAGP,uBAAuB,iCAC7CxB,KAD6C;IAEhDM,SAAS,EAAEW;EAFqC,GAAlD;EAIA,IAAMe,OAAO,gBAAG5C,KAAK,CAAC6C,aAAN,CAAoBX,SAApB,kCAAoCS,kBAApC;IAAwDjC,GAAG,EAAHA;EAAxD,GAAhB;EACA,oBACE,oBAAC,wBAAD;IACE,SAAS,EAAEiC,kBAAkB,CAACG,EADhC;IAEE,SAAS,EAAEd,SAFb;IAGE,OAAO,EAAEC;EAHX,gBAKE;IACE,SAAS,EAAE/B,UAAU,CAAC,oBAAD,EAAuBgB,SAAvB,EAAkC;MACrD,2BAA2Be,OAD0B;MAErD,6BAA6BD,SAFwB;MAGrD,8BAA8BW,kBAAkB,CAACI,QAHI;MAIrD,gCAAgC,CAAC,CAACZ;IAJmB,CAAlC;EADvB,GAOMM,UAPN,GASGG,OATH,eAUE,8CACE,oBAAC,SAAD;IAAW,SAAS,EAAEd;EAAtB,GACGF,QADH,CADF,EAIGG,WAAW,iBACV,oBAAC,mBAAD;IAAqB,OAAO,EAAE;EAA9B,GACGA,WADH,CALJ,CAVF,CALF,CADF;AA6BD,CAtDoB,CAArB;AAwDAJ,YAAY,CAACL,SAAb,GAAyB;EACvB;EACAM,QAAQ,EAAE3B,SAAS,CAAC+C,IAAV,CAAeC,UAFF;;EAGvB;EACA/B,SAAS,EAAEjB,SAAS,CAACuB,MAJE;;EAKvB;EACAK,gBAAgB,EAAE5B,SAAS,CAACuB,MANL;;EAOvB;EACAM,cAAc,EAAE7B,SAAS,CAACuB,MARH;;EASvB;EACAO,WAAW,EAAE9B,SAAS,CAAC+C,IAVA;;EAWvB;EACAhB,SAAS,EAAE/B,SAAS,CAACsB,IAZE;;EAavB;EACAU,OAAO,EAAEhC,SAAS,CAACsB,IAdI;;EAevB;EACAW,SAAS,EAAEjC,SAAS,CAACiD,WAhBE;EAiBvBf,cAAc,EAAElC,SAAS,CAACsB;AAjBH,CAAzB;AAoBAI,YAAY,CAACF,YAAb,GAA4B;EAC1BP,SAAS,EAAEQ,SADe;EAE1BG,gBAAgB,EAAEH,SAFQ;EAG1BI,cAAc,EAAEJ,SAHU;EAI1BK,WAAW,EAAEL,SAJa;EAK1BM,SAAS,EAAE,KALe;EAM1BC,OAAO,EAAE,KANiB;EAO1BC,SAAS,EAAE1B,eAPe;EAQ1B2B,cAAc,EAAE;AARU,CAA5B;AAWA,SAAS3B,eAAT;AACA,eAAemB,YAAf"}