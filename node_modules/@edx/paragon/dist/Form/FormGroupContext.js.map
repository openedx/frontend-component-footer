{"version":3,"file":"FormGroupContext.js","names":["React","useState","useEffect","useMemo","useCallback","PropTypes","classNames","newId","useIdList","omitUndefinedProperties","FORM_CONTROL_SIZES","identityFn","props","noop","FormGroupContext","createContext","getControlProps","useSetIsControlGroupEffect","getLabelProps","getDescriptorProps","hasFormGroupProvider","useFormGroupContext","useContext","useStateEffect","initialState","state","setState","useSetStateEffect","newState","FormGroupContextProvider","children","explicitControlId","controlId","isInvalid","isValid","size","describedByIds","registerDescriptorId","labelledByIds","registerLabelerId","isControlGroup","controlProps","labelledByIdsForControl","undefined","id","labelProps","htmlFor","descriptorProps","contextValue","propTypes","node","isRequired","string","bool","oneOf","SMALL","LARGE","defaultProps"],"sources":["../../src/Form/FormGroupContext.jsx"],"sourcesContent":["import React, {\n  useState, useEffect, useMemo, useCallback,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { newId } from '../utils';\nimport { useIdList, omitUndefinedProperties } from './fieldUtils';\nimport { FORM_CONTROL_SIZES } from './constants';\n\nconst identityFn = props => props;\nconst noop = () => {};\n\nconst FormGroupContext = React.createContext({\n  getControlProps: identityFn,\n  useSetIsControlGroupEffect: noop,\n  getLabelProps: identityFn,\n  getDescriptorProps: identityFn,\n  hasFormGroupProvider: false,\n});\n\nconst useFormGroupContext = () => React.useContext(FormGroupContext);\n\nconst useStateEffect = (initialState) => {\n  const [state, setState] = useState(initialState);\n  const useSetStateEffect = (newState) => {\n    useEffect(() => setState(newState), [newState]);\n  };\n  return [state, useSetStateEffect];\n};\n\nconst FormGroupContextProvider = ({\n  children,\n  controlId: explicitControlId,\n  isInvalid,\n  isValid,\n  size,\n}) => {\n  const controlId = useMemo(() => explicitControlId || newId('form-field'), [explicitControlId]);\n  const [describedByIds, registerDescriptorId] = useIdList(controlId);\n  const [labelledByIds, registerLabelerId] = useIdList(controlId);\n  const [isControlGroup, useSetIsControlGroupEffect] = useStateEffect(false);\n\n  const getControlProps = useCallback((controlProps) => {\n    // labelledByIds from the list above should only be added to a control\n    // if it the control is a group. We prefer adding a condition here because:\n    //    - Hooks cannot be called inside conditionals\n    //    - The getLabelProps function below is forced to generate an id\n    //      whether it is needed or not.\n    //    - This is what allows consumers of Paragon to use <Form.Label>\n    //      interchangeably between ControlGroup type controls and regular Controls\n    const labelledByIdsForControl = isControlGroup ? labelledByIds : undefined;\n    return omitUndefinedProperties({\n      ...controlProps,\n      'aria-describedby': classNames(controlProps['aria-describedby'], describedByIds) || undefined,\n      'aria-labelledby': classNames(controlProps['aria-labelledby'], labelledByIdsForControl) || undefined,\n      id: controlId,\n    });\n  }, [\n    isControlGroup,\n    describedByIds,\n    labelledByIds,\n    controlId,\n  ]);\n\n  const getLabelProps = (labelProps) => {\n    const id = registerLabelerId(labelProps?.id);\n    if (isControlGroup) {\n      return { ...labelProps, id };\n    }\n    return { ...labelProps, htmlFor: controlId };\n  };\n\n  const getDescriptorProps = (descriptorProps) => {\n    const id = registerDescriptorId(descriptorProps?.id);\n    return { ...descriptorProps, id };\n  };\n\n  const contextValue = {\n    getControlProps,\n    getLabelProps,\n    getDescriptorProps,\n    useSetIsControlGroupEffect,\n    isControlGroup,\n    controlId,\n    isInvalid,\n    isValid,\n    size,\n    hasFormGroupProvider: true,\n  };\n\n  return (\n    <FormGroupContext.Provider value={contextValue}>\n      {children}\n    </FormGroupContext.Provider>\n  );\n};\n\nFormGroupContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  controlId: PropTypes.string,\n  isInvalid: PropTypes.bool,\n  isValid: PropTypes.bool,\n  size: PropTypes.oneOf([\n    FORM_CONTROL_SIZES.SMALL,\n    FORM_CONTROL_SIZES.LARGE,\n  ]),\n};\n\nFormGroupContextProvider.defaultProps = {\n  controlId: undefined,\n  isInvalid: undefined,\n  isValid: undefined,\n  size: undefined,\n};\n\nexport {\n  FormGroupContext,\n  FormGroupContextProvider,\n  useFormGroupContext,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IACEC,QADF,EACYC,SADZ,EACuBC,OADvB,EACgCC,WADhC,QAEO,OAFP;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,SAAT,EAAoBC,uBAApB,QAAmD,cAAnD;AACA,SAASC,kBAAT,QAAmC,aAAnC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;EAAA,OAAIA,KAAJ;AAAA,CAAxB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAE,CAArB;;AAEA,IAAMC,gBAAgB,gBAAGd,KAAK,CAACe,aAAN,CAAoB;EAC3CC,eAAe,EAAEL,UAD0B;EAE3CM,0BAA0B,EAAEJ,IAFe;EAG3CK,aAAa,EAAEP,UAH4B;EAI3CQ,kBAAkB,EAAER,UAJuB;EAK3CS,oBAAoB,EAAE;AALqB,CAApB,CAAzB;;AAQA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;EAAA,OAAMrB,KAAK,CAACsB,UAAN,CAAiBR,gBAAjB,CAAN;AAAA,CAA5B;;AAEA,IAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAkB;EACvC,gBAA0BvB,QAAQ,CAACuB,YAAD,CAAlC;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAc;IACtC1B,SAAS,CAAC;MAAA,OAAMwB,QAAQ,CAACE,QAAD,CAAd;IAAA,CAAD,EAA2B,CAACA,QAAD,CAA3B,CAAT;EACD,CAFD;;EAGA,OAAO,CAACH,KAAD,EAAQE,iBAAR,CAAP;AACD,CAND;;AAQA,IAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,OAM3B;EAAA,IALJC,QAKI,QALJA,QAKI;EAAA,IAJOC,iBAIP,QAJJC,SAII;EAAA,IAHJC,SAGI,QAHJA,SAGI;EAAA,IAFJC,OAEI,QAFJA,OAEI;EAAA,IADJC,IACI,QADJA,IACI;EACJ,IAAMH,SAAS,GAAG7B,OAAO,CAAC;IAAA,OAAM4B,iBAAiB,IAAIxB,KAAK,CAAC,YAAD,CAAhC;EAAA,CAAD,EAAiD,CAACwB,iBAAD,CAAjD,CAAzB;;EACA,iBAA+CvB,SAAS,CAACwB,SAAD,CAAxD;EAAA;EAAA,IAAOI,cAAP;EAAA,IAAuBC,oBAAvB;;EACA,kBAA2C7B,SAAS,CAACwB,SAAD,CAApD;EAAA;EAAA,IAAOM,aAAP;EAAA,IAAsBC,iBAAtB;;EACA,sBAAqDhB,cAAc,CAAC,KAAD,CAAnE;EAAA;EAAA,IAAOiB,cAAP;EAAA,IAAuBvB,0BAAvB;;EAEA,IAAMD,eAAe,GAAGZ,WAAW,CAAC,UAACqC,YAAD,EAAkB;IACpD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAMC,uBAAuB,GAAGF,cAAc,GAAGF,aAAH,GAAmBK,SAAjE;IACA,OAAOlC,uBAAuB,iCACzBgC,YADyB;MAE5B,oBAAoBnC,UAAU,CAACmC,YAAY,CAAC,kBAAD,CAAb,EAAmCL,cAAnC,CAAV,IAAgEO,SAFxD;MAG5B,mBAAmBrC,UAAU,CAACmC,YAAY,CAAC,iBAAD,CAAb,EAAkCC,uBAAlC,CAAV,IAAwEC,SAH/D;MAI5BC,EAAE,EAAEZ;IAJwB,GAA9B;EAMD,CAfkC,EAehC,CACDQ,cADC,EAEDJ,cAFC,EAGDE,aAHC,EAIDN,SAJC,CAfgC,CAAnC;;EAsBA,IAAMd,aAAa,GAAG,SAAhBA,aAAgB,CAAC2B,UAAD,EAAgB;IACpC,IAAMD,EAAE,GAAGL,iBAAiB,CAACM,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAED,EAAb,CAA5B;;IACA,IAAIJ,cAAJ,EAAoB;MAClB,uCAAYK,UAAZ;QAAwBD,EAAE,EAAFA;MAAxB;IACD;;IACD,uCAAYC,UAAZ;MAAwBC,OAAO,EAAEd;IAAjC;EACD,CAND;;EAQA,IAAMb,kBAAkB,GAAG,SAArBA,kBAAqB,CAAC4B,eAAD,EAAqB;IAC9C,IAAMH,EAAE,GAAGP,oBAAoB,CAACU,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAEH,EAAlB,CAA/B;IACA,uCAAYG,eAAZ;MAA6BH,EAAE,EAAFA;IAA7B;EACD,CAHD;;EAKA,IAAMI,YAAY,GAAG;IACnBhC,eAAe,EAAfA,eADmB;IAEnBE,aAAa,EAAbA,aAFmB;IAGnBC,kBAAkB,EAAlBA,kBAHmB;IAInBF,0BAA0B,EAA1BA,0BAJmB;IAKnBuB,cAAc,EAAdA,cALmB;IAMnBR,SAAS,EAATA,SANmB;IAOnBC,SAAS,EAATA,SAPmB;IAQnBC,OAAO,EAAPA,OARmB;IASnBC,IAAI,EAAJA,IATmB;IAUnBf,oBAAoB,EAAE;EAVH,CAArB;EAaA,oBACE,oBAAC,gBAAD,CAAkB,QAAlB;IAA2B,KAAK,EAAE4B;EAAlC,GACGlB,QADH,CADF;AAKD,CAjED;;AAmEAD,wBAAwB,CAACoB,SAAzB,GAAqC;EACnCnB,QAAQ,EAAEzB,SAAS,CAAC6C,IAAV,CAAeC,UADU;EAEnCnB,SAAS,EAAE3B,SAAS,CAAC+C,MAFc;EAGnCnB,SAAS,EAAE5B,SAAS,CAACgD,IAHc;EAInCnB,OAAO,EAAE7B,SAAS,CAACgD,IAJgB;EAKnClB,IAAI,EAAE9B,SAAS,CAACiD,KAAV,CAAgB,CACpB5C,kBAAkB,CAAC6C,KADC,EAEpB7C,kBAAkB,CAAC8C,KAFC,CAAhB;AAL6B,CAArC;AAWA3B,wBAAwB,CAAC4B,YAAzB,GAAwC;EACtCzB,SAAS,EAAEW,SAD2B;EAEtCV,SAAS,EAAEU,SAF2B;EAGtCT,OAAO,EAAES,SAH6B;EAItCR,IAAI,EAAEQ;AAJgC,CAAxC;AAOA,SACE7B,gBADF,EAEEe,wBAFF,EAGER,mBAHF"}