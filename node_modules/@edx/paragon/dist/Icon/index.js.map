{"version":3,"file":"index.js","names":["React","PropTypes","classNames","newId","withDeprecatedProps","DEPR_TYPES","Icon","Component","src","id","className","hidden","screenReaderText","svgAttrs","attrs","hasAriaLabel","mergedSvgProps","undefined","propTypes","oneOfType","element","func","shape","string","bool","defaultProps","deprType","FORMAT","expect","value","transform","Array","isArray","join","message"],"sources":["../../src/Icon/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport newId from '../utils/newId';\nimport withDeprecatedProps, { DEPR_TYPES } from '../withDeprecatedProps';\n\n/**\n * An svg with an \"img\" role must satisfy the following a11y requirements\n * - It needs a text alternative in the form of aria-label, aria-labelledby, or screen-reader only text.\n * - If no label is desired, aria-label will be set to an empty string and aria-hidden to \"true\".\n * - focusable is set to false on the svg in all cases as a workaround for an ie11 bug\n */\n\nfunction Icon({\n  src: Component,\n  id,\n  className,\n  hidden,\n  screenReaderText,\n  svgAttrs,\n  ...attrs\n}) {\n  if (Component) {\n    // If no aria label is specified, hide this icon from screenreaders\n    const hasAriaLabel = svgAttrs['aria-label'] || svgAttrs['aria-labelledby'];\n\n    const mergedSvgProps = { ...svgAttrs };\n\n    if (!hasAriaLabel) {\n      mergedSvgProps['aria-label'] = undefined;\n      mergedSvgProps['aria-hidden'] = true;\n    }\n\n    return (\n      <span\n        className={classNames('pgn__icon', className)}\n        id={id}\n        {...attrs}\n      >\n        <Component\n          role=\"img\"\n          focusable={false}\n          {...mergedSvgProps}\n        />\n        {screenReaderText && (\n          <span className=\"sr-only\">\n            {screenReaderText}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  return (\n    <>\n      <span\n        id={id || newId('Icon')}\n        className={className}\n        aria-hidden={hidden}\n      />\n      {screenReaderText && (\n        <span className=\"sr-only\">\n          {screenReaderText}\n        </span>\n      )}\n    </>\n  );\n}\n\nIcon.propTypes = {\n  // eslint-disable-next-line max-len\n  /** An icon component to render. Example import of a Paragon icon component: `import { Check } from '@edx/paragon/dist/icon';` */\n  src: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  /** HTML element attributes to pass through to the underlying svg element */\n  svgAttrs: PropTypes.shape({\n    'aria-label': PropTypes.string,\n    'aria-labelledby': PropTypes.string,\n  }),\n  // eslint-disable-next-line max-len\n  /** the `id` property of the Icon element, by default this value is generated with the `newId` function with the `prefix` of `Icon`. */\n  id: PropTypes.string,\n  // eslint-disable-next-line max-len\n  /** A class name that will define what the Icon looks like. */\n  className: PropTypes.string,\n  // eslint-disable-next-line max-len\n  /** a boolean that determines the value of `aria-hidden` attribute on the Icon span, this value is `true` by default. */\n  hidden: PropTypes.bool,\n  // eslint-disable-next-line max-len\n  /** a string or an element that will be used on a secondary span leveraging the `sr-only` style for screenreader only text, this value is `undefined` by default. This value is recommended for use unless the Icon is being used in a way that is purely decorative or provides no additional context for screen reader users. This field should be thought of the same way an `alt` attribute would be used for `image` tags.\n   */\n  screenReaderText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n\nIcon.defaultProps = {\n  src: null,\n  svgAttrs: {},\n  id: undefined,\n  hidden: true,\n  screenReaderText: undefined,\n  className: undefined,\n};\n\nexport default withDeprecatedProps(Icon, 'Icon', {\n  className: {\n    deprType: DEPR_TYPES.FORMAT,\n    expect: value => typeof value === 'string',\n    transform: value => (Array.isArray(value) ? value.join(' ') : value),\n    message: 'It should be a string.',\n  },\n});\n"],"mappings":"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"}