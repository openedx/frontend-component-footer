{"version":3,"file":"index.js","names":["React","PropTypes","classNames","FontAwesomeIcon","OverlayTrigger","Tooltip","IconButton","forwardRef","ref","className","alt","invertColors","icon","src","iconClassNames","onClick","size","variant","iconAs","isActive","attrs","invert","activeStyle","process","env","NODE_ENV","console","msg","warn","IconComponent","defaultProps","undefined","propTypes","string","elementType","oneOfType","element","func","isRequired","bool","shape","prefix","iconName","array","oneOf","IconButtonWithTooltip","tooltipPlacement","tooltipContent","props","node"],"sources":["../../src/IconButton/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { OverlayTrigger, Tooltip } from '..';\n\nconst IconButton = React.forwardRef(({\n  className,\n  alt,\n  invertColors,\n  icon,\n  src,\n  iconClassNames,\n  onClick,\n  size,\n  variant,\n  iconAs,\n  isActive,\n  ...attrs\n}, ref) => {\n  const invert = invertColors ? 'inverse-' : '';\n  const activeStyle = isActive ? `${variant}-` : '';\n  if (!iconAs && process.env.NODE_ENV === 'development' && console) {\n    const msg = '[Deprecated] IconButton: you have not provided a value for iconAs prop and '\n      + 'are using a default one - FontAwesomeIcon, the default value is going to be changed soon '\n      + 'as Paragon is moving away from FontAwesome, please use Paragon\\'s icons instead.';\n    // eslint-disable-next-line no-console\n    console.warn(msg);\n  }\n  const IconComponent = iconAs || FontAwesomeIcon;\n  return (\n    <button\n      aria-label={alt}\n      className={classNames(\n        'btn-icon',\n        `btn-icon-${invert}${variant}`,\n        `btn-icon-${size}`,\n        {\n          [`btn-icon-${invert}${activeStyle}active`]: isActive,\n        },\n        className,\n      )}\n      onClick={onClick}\n      type=\"button\"\n      ref={ref}\n      {...attrs}\n    >\n      <span className=\"btn-icon__icon-container\">\n        <IconComponent\n          className={classNames('btn-icon__icon', iconClassNames)}\n          icon={icon}\n          src={src}\n        />\n      </span>\n    </button>\n  );\n});\n\nIconButton.defaultProps = {\n  iconAs: undefined,\n  src: null,\n  icon: undefined,\n  iconClassNames: undefined,\n  className: undefined,\n  invertColors: false,\n  variant: 'primary',\n  size: 'md',\n  onClick: () => {},\n  isActive: false,\n};\n\nIconButton.propTypes = {\n  /** A custom class name. */\n  className: PropTypes.string,\n  /** Component that renders the icon, currently defaults to `FontAwesomeIcon`,\n   *  but is going to be deprecated soon, please use Paragon's icons instead. */\n  iconAs: PropTypes.elementType,\n  /** An icon component to render. Example import of a Paragon icon component:\n   * `import { Check } from '@edx/paragon/dist/icon';`\n   * */\n  src: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  /** Alt text for your icon. For best practice, avoid using alt text to describe\n   * the image in the `IconButton`. Instead, we recommend describing the function\n   * of the button. */\n  alt: PropTypes.string.isRequired,\n  /** Changes icon styles for dark background */\n  invertColors: PropTypes.bool,\n  /** Accepts a React fontawesome icon. https://fontawesome.com/how-to-use/on-the-web/using-with/react */\n  icon: PropTypes.shape({\n    prefix: PropTypes.string,\n    iconName: PropTypes.string,\n    // eslint-disable-next-line react/forbid-prop-types\n    icon: PropTypes.array,\n  }),\n  /** Extra class names that will be added to the icon */\n  iconClassNames: PropTypes.string,\n  /** Click handler for the button */\n  onClick: PropTypes.func,\n  /** Type of button (uses Bootstrap options) */\n  variant: PropTypes.oneOf(['primary', 'secondary', 'success', 'warning', 'danger', 'light', 'dark', 'black', 'brand']),\n  /** size of button to render */\n  size: PropTypes.oneOf(['sm', 'md', 'inline']),\n  /** whether to show the `IconButton` in an active state, whose styling is distinct from default state */\n  isActive: PropTypes.bool,\n};\n\n/**\n *\n * @param { object } args Arguments\n * @param { string } args.tooltipPlacement choose from https://popper.js.org/docs/v2/constructors/#options\n * @param { React.Component } args.tooltipContent any content to pass to tooltip content area\n * @returns { IconButton } a button wrapped in overlaytrigger\n */\nconst IconButtonWithTooltip = ({\n  tooltipPlacement, tooltipContent, variant, invertColors, ...props\n}) => {\n  const invert = invertColors ? 'inverse-' : '';\n  return (\n    <OverlayTrigger\n      placement={tooltipPlacement}\n      overlay={(\n        <Tooltip\n          id={`iconbutton-tooltip-${tooltipPlacement}`}\n          variant={invert ? 'light' : ''}\n        >\n          {tooltipContent}\n        </Tooltip>\n      )}\n    >\n      <IconButton variant={variant} invertColors={invertColors} {...props} />\n    </OverlayTrigger>\n  );\n};\n\nIconButtonWithTooltip.defaultProps = {\n  tooltipPlacement: 'top',\n  variant: 'primary',\n  invertColors: false,\n};\n\nIconButtonWithTooltip.propTypes = {\n  /** tooltip placement can be top, left, right etc, per https://popper.js.org/docs/v2/constructors/#options  */\n  tooltipPlacement: PropTypes.string,\n  /** any valid JSX or text to be rendered as tooltip contents */\n  tooltipContent: PropTypes.node.isRequired,\n  /** Type of button (uses Bootstrap options) */\n  variant: PropTypes.oneOf(['primary', 'secondary', 'success', 'warning', 'danger', 'light', 'dark', 'black', 'brand']),\n  /** Changes icon styles for dark background */\n  invertColors: PropTypes.bool,\n};\n\nIconButton.IconButtonWithTooltip = IconButtonWithTooltip;\n\nexport default IconButton;\nexport { IconButtonWithTooltip };\n"],"mappings":"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"}