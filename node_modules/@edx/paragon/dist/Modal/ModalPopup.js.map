{"version":3,"file":"ModalPopup.js","names":["React","PropTypes","FocusOn","Portal","PopperElement","ModalContextProvider","ModalPopup","children","onClose","isOpen","positionRef","isBlocking","withPortal","placement","popperProps","RootComponent","Fragment","propTypes","node","isRequired","func","bool","oneOfType","shape","current","defaultProps"],"sources":["../../src/Modal/ModalPopup.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FocusOn } from 'react-focus-on';\nimport Portal from './Portal';\nimport PopperElement from './PopperElement';\nimport { ModalContextProvider } from './ModalContext';\n\nconst ModalPopup = ({\n  children,\n  onClose,\n  isOpen,\n  positionRef,\n  isBlocking,\n  withPortal,\n  placement,\n  ...popperProps\n}) => {\n  const RootComponent = withPortal ? Portal : React.Fragment;\n\n  return (\n    <ModalContextProvider onClose={onClose} isOpen={isOpen} isBlocking={isBlocking}>\n      <RootComponent>\n        <PopperElement target={positionRef} placement={placement} {...popperProps}>\n          <FocusOn\n            scrollLock={false}\n            enabled={isOpen}\n            onEscapeKey={onClose}\n            onClickOutside={onClose}\n          >\n            {isOpen && (\n              <>\n                {children}\n              </>\n            )}\n          </FocusOn>\n        </PopperElement>\n      </RootComponent>\n    </ModalContextProvider>\n  );\n};\n\nModalPopup.propTypes = {\n  /** Specifies the contents of the modal */\n  children: PropTypes.node.isRequired,\n  /** A callback function for when the modal is dismissed */\n  onClose: PropTypes.func.isRequired,\n  /** Is the modal dialog open or closed */\n  isOpen: PropTypes.bool.isRequired,\n  /** Prevent clicking on the backdrop to close the modal */\n  isBlocking: PropTypes.bool,\n  /** Insert modal into a different location in the DOM */\n  withPortal: PropTypes.bool,\n  // This type: https://stackoverflow.com/questions/48007326/what-is-the-correct-proptype-for-a-ref-in-react\n  /** Specifies an element near which the modal should be displayed */\n  positionRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.shape({}) }),\n  ]),\n  /** Specifies position according to the element that the ``positionRef`` prop points to */\n  placement: PopperElement.propTypes.placement,\n};\n\nModalPopup.defaultProps = {\n  isBlocking: false,\n  withPortal: false,\n  placement: 'bottom-start',\n  positionRef: null,\n};\n\nexport default ModalPopup;\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,oBAAT,QAAqC,gBAArC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OASb;EAAA,IARJC,QAQI,QARJA,QAQI;EAAA,IAPJC,OAOI,QAPJA,OAOI;EAAA,IANJC,MAMI,QANJA,MAMI;EAAA,IALJC,WAKI,QALJA,WAKI;EAAA,IAJJC,UAII,QAJJA,UAII;EAAA,IAHJC,UAGI,QAHJA,UAGI;EAAA,IAFJC,SAEI,QAFJA,SAEI;EAAA,IADDC,WACC;;EACJ,IAAMC,aAAa,GAAGH,UAAU,GAAGT,MAAH,GAAYH,KAAK,CAACgB,QAAlD;EAEA,oBACE,oBAAC,oBAAD;IAAsB,OAAO,EAAER,OAA/B;IAAwC,MAAM,EAAEC,MAAhD;IAAwD,UAAU,EAAEE;EAApE,gBACE,oBAAC,aAAD,qBACE,oBAAC,aAAD;IAAe,MAAM,EAAED,WAAvB;IAAoC,SAAS,EAAEG;EAA/C,GAA8DC,WAA9D,gBACE,oBAAC,OAAD;IACE,UAAU,EAAE,KADd;IAEE,OAAO,EAAEL,MAFX;IAGE,WAAW,EAAED,OAHf;IAIE,cAAc,EAAEA;EAJlB,GAMGC,MAAM,iBACL,0CACGF,QADH,CAPJ,CADF,CADF,CADF,CADF;AAoBD,CAhCD;;AAkCAD,UAAU,CAACW,SAAX,GAAuB;EACrB;EACAV,QAAQ,EAAEN,SAAS,CAACiB,IAAV,CAAeC,UAFJ;;EAGrB;EACAX,OAAO,EAAEP,SAAS,CAACmB,IAAV,CAAeD,UAJH;;EAKrB;EACAV,MAAM,EAAER,SAAS,CAACoB,IAAV,CAAeF,UANF;;EAOrB;EACAR,UAAU,EAAEV,SAAS,CAACoB,IARD;;EASrB;EACAT,UAAU,EAAEX,SAAS,CAACoB,IAVD;EAWrB;;EACA;EACAX,WAAW,EAAET,SAAS,CAACqB,SAAV,CAAoB,CAC/BrB,SAAS,CAACmB,IADqB,EAE/BnB,SAAS,CAACsB,KAAV,CAAgB;IAAEC,OAAO,EAAEvB,SAAS,CAACsB,KAAV,CAAgB,EAAhB;EAAX,CAAhB,CAF+B,CAApB,CAbQ;;EAiBrB;EACAV,SAAS,EAAET,aAAa,CAACa,SAAd,CAAwBJ;AAlBd,CAAvB;AAqBAP,UAAU,CAACmB,YAAX,GAA0B;EACxBd,UAAU,EAAE,KADY;EAExBC,UAAU,EAAE,KAFY;EAGxBC,SAAS,EAAE,cAHa;EAIxBH,WAAW,EAAE;AAJW,CAA1B;AAOA,eAAeJ,UAAf"}