{"version":3,"file":"index.js","names":["React","BaseNav","BaseNavDropdown","BaseNavItem","BaseNavLink","PropTypes","Nav","props","NavItem","NavLink","NavDropdown","NavDropdownItem","NavDropdownDivider","propTypes","activeKey","oneOfType","string","number","as","elementType","fill","bool","justify","navbar","onKeyDown","func","onSelect","role","variant","oneOf","bsPrefix","active","disabled","eventKey","href","id","isRequired","title","node","menuRole","menuVariant","onClick","renderMenuOnMount","rootCloseEvent","defaultProps","Item","Link","Divider"],"sources":["../../src/Nav/index.jsx"],"sourcesContent":["import React from 'react';\nimport BaseNav from 'react-bootstrap/Nav';\nimport BaseNavDropdown from 'react-bootstrap/NavDropdown';\nimport BaseNavItem from 'react-bootstrap/NavItem';\nimport BaseNavLink from 'react-bootstrap/NavLink';\nimport PropTypes from 'prop-types';\n\nconst Nav = (props) => <BaseNav {...props} />;\nconst NavItem = (props) => <BaseNavItem {...props} />;\nconst NavLink = (props) => <BaseNavLink {...props} />;\nconst NavDropdown = (props) => <BaseNavDropdown {...props} />;\nconst NavDropdownItem = (props) => <BaseNavDropdown.Item {...props} />;\nconst NavDropdownDivider = (props) => <BaseNavDropdown.Divider {...props} />;\n\nNav.propTypes = {\n  ...Nav.propTypes,\n  /** Marks the NavItem with a matching eventKey (or href if present) as active. */\n  activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Set a custom element for this component. */\n  as: PropTypes.elementType,\n  /** Have all `NavItems` proportionately fill all available width. */\n  fill: PropTypes.bool,\n  /** Have all `NavItems` evenly fill all available width. */\n  justify: PropTypes.bool,\n  /**\n   * Apply styling an alignment for use in a `Navbar`.\n   * This prop will be set automatically when the `Nav` is used inside a `Navbar`.\n   */\n  navbar: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n  /** A callback fired when a NavItem is selected. */\n  onSelect: PropTypes.string,\n  /**\n   * ARIA role for the `Nav`, in the context of a `TabContainer`,\n   * the default will be set to \"tablist\", but can be overridden by the `Nav` when set explicitly.\n   */\n  role: PropTypes.string,\n  /** The visual variant of the nav items. */\n  variant: PropTypes.oneOf(['tabs', 'pills']),\n  /** Change the underlying component CSS base class name and modifier class names prefix. */\n  bsPrefix: PropTypes.string,\n};\n\nNavItem.propTypes = {\n  ...NavItem.propTypes,\n  /** Set a custom element for this component. */\n  as: PropTypes.elementType,\n  /** Change the underlying component CSS base class name and modifier class names prefix. */\n  bsPrefix: PropTypes.string,\n};\n\nNavLink.propTypes = {\n  ...NavLink.propTypes,\n  /** The active state of the `NavItem` item. */\n  active: PropTypes.bool,\n  /** You can use a custom element type for this component. */\n  as: PropTypes.elementType,\n  /** The disabled state of the `NavItem` item. */\n  disabled: PropTypes.bool,\n  /**\n   * Uniquely identifies the `NavItem` amongst its siblings,\n   * used to determine and control the active state of the parent `Nav`\n   */\n  eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** The HTML href attribute for the `NavLink` */\n  href: PropTypes.string,\n  /** The ARIA role for the `NavLink`, In the context of a 'tablist' parent `Nav`, the role defaults to 'tab' */\n  role: PropTypes.string,\n  /** Change the underlying component CSS base class name and modifier class names prefix. */\n  bsPrefix: PropTypes.string,\n};\n\nNavDropdown.propTypes = {\n  ...NavDropdown.propTypes,\n  /** An html id attribute for the `Toggle` button, necessary for assistive technologies, such as screen readers. */\n  id: PropTypes.string.isRequired,\n  /** The content of the non-toggle Button. */\n  title: PropTypes.node.isRequired,\n  /** Style the toggle `NavLink` as active */\n  active: PropTypes.bool,\n  /** Disables the toggle `NavLink` */\n  disabled: PropTypes.bool,\n  /** An ARIA accessible role applied to the `Menu` component. */\n  menuRole: PropTypes.string,\n  /** Menu color variant. Omitting this will use the default light color. */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /** An `onClick` handler passed to the `Toggle` component */\n  onClick: PropTypes.func,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown. */\n  renderMenuOnMount: PropTypes.bool,\n  /** Which event when fired outside the component will cause it to be closed. */\n  rootCloseEvent: PropTypes.string,\n  /** Change the underlying component CSS base class name and modifier class names prefix. */\n  bsPrefix: PropTypes.string,\n};\n\nNav.defaultProps = {\n  ...BaseNav.defaultProps,\n};\n\nNavDropdown.defaultProps = {\n  ...BaseNavDropdown.defaultProps,\n};\n\nNavItem.defaultProps = {\n  ...BaseNavItem.defaultProps,\n};\n\nNavLink.defaultProps = {\n  ...BaseNavLink.defaultProps,\n};\n\nNav.Item = NavItem;\nNav.Link = NavLink;\nNavDropdown.Item = NavDropdownItem;\nNavDropdown.Divider = NavDropdownDivider;\n\nexport { NavDropdown, NavItem, NavLink };\nexport default Nav;\n"],"mappings":"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"}