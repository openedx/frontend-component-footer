{"version":3,"file":"index.js","names":["React","BaseNavbar","BaseNavbarBrand","BaseNavbarToggle","BaseNavbarCollapse","PropTypes","NAVBAR_LABEL","Navbar","props","NavbarBrand","NavbarToggle","NavbarCollapse","propTypes","as","elementType","bg","string","collapseOnSelect","bool","expand","oneOf","expanded","fixed","onSelect","func","onToggle","role","sticky","variant","bsPrefix","href","children","node","label","onClick","defaultProps","undefined","Brand","Toggle","Collapse"],"sources":["../../src/Navbar/index.jsx"],"sourcesContent":["import React from 'react';\nimport BaseNavbar from 'react-bootstrap/Navbar';\nimport BaseNavbarBrand from 'react-bootstrap/NavbarBrand';\nimport BaseNavbarToggle from 'react-bootstrap/NavbarToggle';\nimport BaseNavbarCollapse from 'react-bootstrap/NavbarCollapse';\nimport PropTypes from 'prop-types';\n\nexport const NAVBAR_LABEL = 'Toggle navigation';\n\nconst Navbar = (props) => <BaseNavbar {...props} />;\nconst NavbarBrand = (props) => <BaseNavbarBrand {...props} />;\nconst NavbarToggle = (props) => <BaseNavbarToggle {...props} />;\nconst NavbarCollapse = (props) => <BaseNavbarCollapse {...props} />;\n\nNavbar.propTypes = {\n  ...Navbar.propTypes,\n  /** Set a custom element for this component. */\n  as: PropTypes.elementType,\n  /**\n   * A convenience prop for adding `bg-*` utility classes since they\n   * are so commonly used here. `light` and `dark` are common choices\n   * but any `bg-*` class is supported, including any custom ones you might define.\n   *\n   * Pairs nicely with the `variant` prop.\n   */\n  bg: PropTypes.string,\n  /**\n   * Toggles `expanded` to `false` after the onSelect event of a descendant of a child\n   * `<Nav>` fires. Does nothing if no `<Nav>` or `<Nav>` descendants exist.\n   *\n   * Manually controlling `expanded` via the onSelect callback is recommended instead,\n   * for more complex operations that need to be executed after the `select` event of `<Nav>` descendants.\n   */\n  collapseOnSelect: PropTypes.bool,\n  /**\n   * The breakpoint, below which, the Navbar will collapse.\n   * When `true` the Navbar will always be expanded regardless of screen size.\n   */\n  expand: PropTypes.oneOf([true, 'sm', 'md', 'lg', 'xl']),\n  /** Controls the visibility of the navbar body */\n  expanded: PropTypes.bool,\n  /**\n   * Create a fixed navbar along the top or bottom of the screen,\n   * that scrolls with the page. A convenience prop for the `fixed-*` positioning classes.\n   */\n  fixed: PropTypes.oneOf(['top', 'bottom']),\n  /** A callback fired when a descendant of a child `<Nav>` is selected. */\n  onSelect: PropTypes.func,\n  /**\n   * A callback fired when the `<Navbar>` body collapses or expands.\n   * Fired when a `<Navbar.Toggle>` is clicked and called with the new `expanded` boolean value.\n   *\n   * Controls `expanded`.\n   */\n  onToggle: PropTypes.func,\n  /**\n   * The ARIA role for the navbar, will default to 'navigation'\n   * for Navbars whose as is something other than `<nav>`.\n   */\n  role: PropTypes.string,\n  /**\n   * Position the navbar at the top of the viewport, but only after scrolling past it.\n   * A convenience prop for the `sticky-top` positioning class.\n   */\n  sticky: PropTypes.oneOf(['top']),\n  /**\n   * The general visual variant a the `Navbar`.\n   * Use in combination with the `bg` prop,\n   * `background-color` utilities, or your own background styles.\n   */\n  variant: PropTypes.oneOf(['light', 'dark']),\n  /** Change the underlying component CSS base class name and modifier class names prefix. */\n  bsPrefix: PropTypes.string,\n};\n\nNavbarBrand.propTypes = {\n  ...NavbarBrand.propTypes,\n  /** Set a custom element for this component. */\n  as: PropTypes.elementType,\n  /** An href, when provided the Brand will render as an `<a>` element (unless `as` is provided). */\n  href: PropTypes.string,\n  /** Change the underlying component CSS base class name and modifier class names prefix. */\n  bsPrefix: PropTypes.string,\n};\n\nNavbarToggle.propTypes = {\n  ...NavbarToggle.propTypes,\n  /** Set a custom element for this component. */\n  as: PropTypes.elementType,\n  /** The toggle content. When empty, the default toggle will be rendered. */\n  children: PropTypes.node,\n  /** An accessible ARIA label for the toggler button. */\n  label: PropTypes.string,\n  /** Specifies the callback function when the toggle is clicked. */\n  onClick: PropTypes.func,\n  /** Change the underlying component CSS base class name and modifier class names prefix. */\n  bsPrefix: PropTypes.string,\n};\n\nNavbarCollapse.propTypes = {\n  ...NavbarCollapse.propTypes,\n  /** Change the underlying component CSS base class name and modifier class names prefix. */\n  bsPrefix: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  as: 'nav',\n  bg: undefined,\n  collapseOnSelect: false,\n  expand: true,\n  expanded: undefined,\n  fixed: undefined,\n  onSelect: () => {},\n  onToggle: () => {},\n  role: 'navigation',\n  sticky: undefined,\n  variant: 'light',\n  bsPrefix: 'navbar',\n};\n\nNavbarBrand.defaultProps = {\n  as: 'nav',\n  href: undefined,\n  bsPrefix: 'navbar',\n};\n\nNavbarToggle.defaultProps = {\n  as: 'button',\n  children: undefined,\n  label: NAVBAR_LABEL,\n  onClick: () => {},\n  bsPrefix: 'navbar-toggler',\n};\n\nNavbarCollapse.defaultProps = {\n  bsPrefix: 'navbar-collapse',\n};\n\nNavbar.Brand = NavbarBrand;\nNavbar.Toggle = NavbarToggle;\nNavbar.Collapse = NavbarCollapse;\n\nexport { NavbarBrand };\nexport default Navbar;\n"],"mappings":"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"}