{"version":3,"file":"useWindowSize.js","names":["useState","useLayoutEffect","useWindowSize","width","undefined","height","windowSize","setWindowSize","handleResize","global","innerWidth","innerHeight","addEventListener","removeEventListener"],"sources":["../../src/hooks/useWindowSize.jsx"],"sourcesContent":["import { useState, useLayoutEffect } from 'react';\n\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useLayoutEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: global.innerWidth,\n        height: global.innerHeight,\n      });\n    }\n\n    // Add event listener\n    global.addEventListener('resize', handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => global.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\nexport default useWindowSize;\n"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,OAA1C;;AAEA,SAASC,aAAT,GAAyB;EACvB;EACA;EACA,gBAAoCF,QAAQ,CAAC;IAC3CG,KAAK,EAAEC,SADoC;IAE3CC,MAAM,EAAED;EAFmC,CAAD,CAA5C;EAAA;EAAA,IAAOE,UAAP;EAAA,IAAmBC,aAAnB;;EAKAN,eAAe,CAAC,YAAM;IACpB;IACA,SAASO,YAAT,GAAwB;MACtB;MACAD,aAAa,CAAC;QACZJ,KAAK,EAAEM,MAAM,CAACC,UADF;QAEZL,MAAM,EAAEI,MAAM,CAACE;MAFH,CAAD,CAAb;IAID,CARmB,CAUpB;;;IACAF,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAXoB,CAapB;;IACAA,YAAY,GAdQ,CAgBpB;;IACA,OAAO;MAAA,OAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAN;IAAA,CAAP;EACD,CAlBc,EAkBZ,EAlBY,CAAf,CARuB,CA0Bf;;EAER,OAAOF,UAAP;AACD;;AAED,eAAeJ,aAAf"}