{"version":3,"file":"nonNegativeInteger.js","names":["isNonNegativeInteger","x","Number","isInteger","isFinite","nonNegativeInteger","props","propName","componentName","value","Error","requiredNonNegativeNumber","isRequired"],"sources":["../../../src/utils/propTypes/nonNegativeInteger.js"],"sourcesContent":["const isNonNegativeInteger = (x) => typeof x === 'number' && Number.isInteger(x) && Number.isFinite(x) && x >= 0;\n\nconst nonNegativeInteger = (props, propName, componentName) => {\n  const value = props[propName];\n\n  if (value == null || isNonNegativeInteger(value)) {\n    return null;\n  }\n\n  return new Error(`${propName} in ${componentName} must be a non-negative integer.`);\n};\n\nconst requiredNonNegativeNumber = (props, propName, componentName) => {\n  const value = props[propName];\n\n  if (nonNegativeInteger(value)) {\n    return null;\n  }\n\n  return new Error(`${propName} in ${componentName} must be a non-negative integer.`);\n};\n\nnonNegativeInteger.isRequired = requiredNonNegativeNumber;\n\nexport default nonNegativeInteger;\n"],"mappings":"AAAA,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,CAAD;EAAA,OAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBC,MAAM,CAACC,SAAP,CAAiBF,CAAjB,CAAzB,IAAgDC,MAAM,CAACE,QAAP,CAAgBH,CAAhB,CAAhD,IAAsEA,CAAC,IAAI,CAAlF;AAAA,CAA7B;;AAEA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAoC;EAC7D,IAAMC,KAAK,GAAGH,KAAK,CAACC,QAAD,CAAnB;;EAEA,IAAIE,KAAK,IAAI,IAAT,IAAiBT,oBAAoB,CAACS,KAAD,CAAzC,EAAkD;IAChD,OAAO,IAAP;EACD;;EAED,OAAO,IAAIC,KAAJ,WAAaH,QAAb,iBAA4BC,aAA5B,sCAAP;AACD,CARD;;AAUA,IAAMG,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACL,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAoC;EACpE,IAAMC,KAAK,GAAGH,KAAK,CAACC,QAAD,CAAnB;;EAEA,IAAIF,kBAAkB,CAACI,KAAD,CAAtB,EAA+B;IAC7B,OAAO,IAAP;EACD;;EAED,OAAO,IAAIC,KAAJ,WAAaH,QAAb,iBAA4BC,aAA5B,sCAAP;AACD,CARD;;AAUAH,kBAAkB,CAACO,UAAnB,GAAgCD,yBAAhC;AAEA,eAAeN,kBAAf"}